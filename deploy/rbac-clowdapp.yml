---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rbac
objects:
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: rbac
    annotations:
      bonfire.dependencies: ${BONFIRE_DEPENDENCIES}
  spec:
    envName: ${ENV_NAME}
    testing:
      iqePlugin: rbac
    database:
      name: rbac
      dbVolumeSize: medium
    inMemoryDb: true
    kafkaTopics:
    - topicName: ${NOTIFICATIONS_TOPIC}
      partitions: 3
      replicas: 3
    - topicName: ${EXTERNAL_SYNC_TOPIC}
      partitions: 1
      replicas: 3
    - topicName: ${EXTERNAL_CHROME_TOPIC}
      partitions: 1
      replicas: 3
    deployments:
    - name: worker-service
      minReplicas: ${{MIN_WORKER_REPLICAS}}
      metadata:
        annotations:
          ignore-check.kube-linter.io/minimum-three-replicas: "dont need 3 replicas - runs background processes from turnpike/weekly tasks"
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        initContainers:
          - env:
            inheritEnv: true
            command:
              - sh
              - /opt/rbac/deploy/init-container-setup.sh
        command:
          - /bin/bash
          - '-c'
          - >
            PYTHONPATH=${PWD}/rbac/ celery -A
            rbac.celery worker -l $DJANGO_LOG_LEVEL
        livenessProbe:
          exec:
            command:
              - /bin/bash
              - '-c'
              - >
                PYTHONPATH=${PWD}/rbac/ celery -A rbac.celery
                inspect ping
          failureThreshold: 3
          initialDelaySeconds: ${{CELERY_INITIAL_DELAY_SEC}}
          periodSeconds: ${{CELERY_PERIOD_SEC}}
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          exec:
            command:
              - /bin/bash
              - '-c'
              - >
                PYTHONPATH=${PWD}/rbac/ celery -A rbac.celery
                inspect ping
          failureThreshold: 3
          periodSeconds: ${{CELERY_PERIOD_SEC}}
          successThreshold: 1
          timeoutSeconds: 10
        volumeMounts:
        - mountPath: /opt/rbac/rbac/management/role/definitions
          name: default-role-config
        - mountPath: /opt/rbac/rbac/management/role/permissions
          name: model-access-permissions
        - mountPath: /opt/rbac/rbac/management/principal/umb_certs
          name: umb-certs
        volumes:
        - configMap:
            name: ${CONFIG_MAP_NAME}
          name: default-role-config
        - configMap:
            name: ${MODEL_ACCESS_PERMISSIONS}
          name: model-access-permissions
        - name: umb-certs
          secret:
            secretName: service-accounts
            items:
            - key: umb-cert
              path: cert.pem
            - key: umb-key
              path: key.pem
        resources:
          limits:
            cpu: ${CELERY_WORKER_CPU_LIMIT}
            memory: ${CELERY_WORKER_MEMORY_LIMIT}
          requests:
            cpu: ${CELERY_WORKER_CPU_REQUEST}
            memory: ${CELERY_WORKER_MEMORY_REQUEST}
        env:
          - name: AUTHENTICATE_WITH_ORG_ID
            value: ${AUTHENTICATE_WITH_ORG_ID}
          - name: DJANGO_LOG_LEVEL
            value: ${DJANGO_LOG_LEVEL}
          - name: DJANGO_DEBUG
            value: ${DJANGO_DEBUG}
          - name: PERMISSION_SEEDING_ENABLED
            value: 'False'
          - name: ROLE_SEEDING_ENABLED
            value: 'False'
          - name: GROUP_SEEDING_ENABLED
            value: 'False'
          - name: DJANGO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: django-secret-key
                name: ${NAME}-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_PROTOCOL
            valueFrom:
              secretKeyRef:
                key: principal-proxy-protocol
                name: ${NAME}-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_HOST
            valueFrom:
              secretKeyRef:
                key: principal-proxy-host
                name: ${NAME}-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_PORT
            valueFrom:
              secretKeyRef:
                key: principal-proxy-port
                name: ${NAME}-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_PATH
            value: ''
          - name: PRINCIPAL_PROXY_USER_ENV
            valueFrom:
              secretKeyRef:
                key: principal-proxy-env
                name: ${NAME}-secret
                optional: false
          - name: PRINCIPAL_PROXY_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: client-id
                name: insights-rbac
                optional: false
          - name: PRINCIPAL_PROXY_API_TOKEN
            valueFrom:
              secretKeyRef:
                key: token
                name: insights-rbac
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_SSL_VERIFY
            valueFrom:
              secretKeyRef:
                key: principal-proxy-ssl-verify
                name: ${NAME}-secret
                optional: true
          - name: PRINCIPAL_PROXY_SERVICE_SOURCE_CERT
            valueFrom:
              secretKeyRef:
                key: principal-proxy-source-cert
                name: ${NAME}-secret
                optional: true
          - name: APP_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: PGSSLMODE
            value: ${PGSSLMODE}
          - name: CLOWDER_ENABLED
            value: ${CLOWDER_ENABLED}
          - name: CW_NULL_WORKAROUND
            value: ${CW_NULL_WORKAROUND}
          - name: GLITCHTIP_DSN
            valueFrom:
              secretKeyRef:
                name: ${GLITCHTIP_SECRET}
                key: dsn
                optional: true
          - name: MAX_SEED_THREADS
            value: ${MAX_SEED_THREADS}
          - name: ACCESS_CACHE_CONNECT_SIGNALS
            value: 'False'
          - name: NOTIFICATIONS_ENABLED
            value: ${NOTIFICATIONS_ENABLED}
          - name: NOTIFICATIONS_RH_ENABLED
            value: ${NOTIFICATIONS_RH_ENABLED}
          - name: KAFKA_ENABLED
            value: ${KAFKA_ENABLED}
          - name: NOTIFICATIONS_TOPIC
            value: ${NOTIFICATIONS_TOPIC}
          - name: EXTERNAL_SYNC_TOPIC
            value: ${EXTERNAL_SYNC_TOPIC}
          - name: EXTERNAL_CHROME_TOPIC
            value: ${EXTERNAL_CHROME_TOPIC}
          - name: MIGRATE_AND_SEED_ON_INIT
            value: ${WORKER_MIGRATE_AND_SEED_ON_INIT}
          - name: UMB_HOST
            value: ${UMB_HOST}
          - name: UMB_PORT
            value: ${UMB_PORT}
          - name: SA_NAME
            value: ${SA_NAME}

    - name: scheduler-service
      minReplicas: ${{MIN_SCHEDULER_REPLICAS}}
      metadata:
        annotations:
          ignore-check.kube-linter.io/minimum-three-replicas: "dont need 3 replicas - keeps the cron scheduled for the weekly tasks"
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        command:
          - /bin/bash
          - '-c'
          - >
            PYTHONPATH=${PWD}/rbac/ celery -A
            rbac.celery beat -l $DJANGO_LOG_LEVEL
        livenessProbe:
          exec:
            command:
              - /bin/bash
              - '-c'
              - >
                PYTHONPATH=${PWD}/rbac/ celery -A rbac.celery
                inspect ping
          failureThreshold: 3
          initialDelaySeconds: ${{CELERY_INITIAL_DELAY_SEC}}
          periodSeconds: ${{CELERY_PERIOD_SEC}}
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          exec:
            command:
              - /bin/bash
              - '-c'
              - >
                PYTHONPATH=${PWD}/rbac/ celery -A rbac.celery
                inspect ping
          failureThreshold: 3
          periodSeconds: ${{CELERY_PERIOD_SEC}}
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: ${CELERY_SCHEDULER_CPU_LIMIT}
            memory: ${CELERY_SCHEDULER_MEMORY_LIMIT}
          requests:
            cpu: ${CELERY_SCHEDULER_CPU_REQUEST}
            memory: ${CELERY_SCHEDULER_MEMORY_REQUEST}
        env:
        - name: AUTHENTICATE_WITH_ORG_ID
          value: ${AUTHENTICATE_WITH_ORG_ID}
        - name: DJANGO_LOG_LEVEL
          value: ${DJANGO_LOG_LEVEL}
        - name: DJANGO_DEBUG
          value: ${DJANGO_DEBUG}
        - name: APP_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PERMISSION_SEEDING_ENABLED
          value: 'False'
        - name: ROLE_SEEDING_ENABLED
          value: 'False'
        - name: GROUP_SEEDING_ENABLED
          value: 'False'
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: CW_NULL_WORKAROUND
          value: ${CW_NULL_WORKAROUND}
        - name: GLITCHTIP_DSN
          valueFrom:
            secretKeyRef:
              name: ${GLITCHTIP_SECRET}
              key: dsn
              optional: true
        - name: PRINCIPAL_CLEANUP_DELETION_ENABLED_UMB
          value: ${PRINCIPAL_CLEANUP_DELETION_ENABLED_UMB}

    - name: service
      minReplicas: ${{MIN_REPLICAS}}
      webServices:
        public:
          enabled: true
          apiPath: rbac
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        initContainers:
          - env:
            inheritEnv: true
            command:
              - sh
              - /opt/rbac/deploy/init-container-setup.sh
        livenessProbe:
          httpGet:
            path: /api/rbac/v1/status/
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /api/rbac/v1/status/
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 3
        volumes:
        - configMap:
            name: ${CONFIG_MAP_NAME}
          name: default-role-config
        - configMap:
            name: ${MODEL_ACCESS_PERMISSIONS}
          name: model-access-permissions
        volumeMounts:
        - mountPath: /opt/rbac/rbac/management/role/definitions
          name: default-role-config
        - mountPath: /opt/rbac/rbac/management/role/permissions
          name: model-access-permissions
        resources:
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
          requests:
            cpu: ${CPU_REQUEST}
            memory: ${MEMORY_REQUEST}
        env:
          - name: GLITCHTIP_DSN
            valueFrom:
              secretKeyRef:
                name: ${GLITCHTIP_SECRET}
                key: dsn
                optional: true
          - name: SERVICE_PSKS
            valueFrom:
              secretKeyRef:
                key: psks.json
                name: ${RBAC_PSKS}
                optional: false
          - name: PGSSLMODE
            value: ${PGSSLMODE}
          - name: DJANGO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: django-secret-key
                name: rbac-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_PROTOCOL
            valueFrom:
              secretKeyRef:
                key: principal-proxy-protocol
                name: rbac-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_HOST
            valueFrom:
              secretKeyRef:
                key: principal-proxy-host
                name: rbac-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_PORT
            valueFrom:
              secretKeyRef:
                key: principal-proxy-port
                name: rbac-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_PATH
            value: ''
          - name: PRINCIPAL_PROXY_USER_ENV
            valueFrom:
              secretKeyRef:
                key: principal-proxy-env
                name: rbac-secret
                optional: false
          - name: PRINCIPAL_PROXY_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: client-id
                name: insights-rbac
                optional: false
          - name: PRINCIPAL_PROXY_API_TOKEN
            valueFrom:
              secretKeyRef:
                key: token
                name: insights-rbac
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_SSL_VERIFY
            valueFrom:
              secretKeyRef:
                key: principal-proxy-ssl-verify
                name: rbac-secret
                optional: true
          - name: PRINCIPAL_PROXY_SERVICE_SOURCE_CERT
            valueFrom:
              secretKeyRef:
                key: principal-proxy-source-cert
                name: rbac-secret
                optional: true
          - name: POD_CPU_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: rbac-service
                resource: limits.cpu
          - name: ACCESS_CACHE_ENABLED
            value: ${ACCESS_CACHE_ENABLED}
          - name: APP_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: DJANGO_DEBUG
            value: ${DJANGO_DEBUG}
          - name: API_PATH_PREFIX
            value: ${API_PATH_PREFIX}
          - name: DEVELOPMENT
            value: ${DEVELOPMENT}
          - name: RBAC_LOG_LEVEL
            value: ${RBAC_LOG_LEVEL}
          - name: DJANGO_LOG_LEVEL
            value: ${DJANGO_LOG_LEVEL}
          - name: DJANGO_LOG_FORMATTER
            value: ${DJANGO_LOG_FORMATTER}
          - name: DJANGO_LOG_HANDLERS
            value: ${DJANGO_LOG_HANDLERS}
          - name: DJANGO_LOG_DIRECTORY
            value: ${DJANGO_LOG_DIRECTORY}
          - name: DJANGO_LOGGING_FILE
            value: ${DJANGO_LOGGING_FILE}
          - name: PERMISSION_SEEDING_ENABLED
            value: ${PERMISSION_SEEDING_ENABLED}
          - name: ROLE_SEEDING_ENABLED
            value: ${ROLE_SEEDING_ENABLED}
          - name: GROUP_SEEDING_ENABLED
            value: ${GROUP_SEEDING_ENABLED}
          - name: BYPASS_BOP_VERIFICATION
            value: ${BYPASS_BOP_VERIFICATION}
          - name: ROLE_CREATE_ALLOW_LIST
            value: ${ROLE_CREATE_ALLOW_LIST}
          - name: RBAC_DESTRUCTIVE_ENABLED_UNTIL
            value: ${RBAC_DESTRUCTIVE_ENABLED_UNTIL}
          - name: CLOWDER_ENABLED
            value: ${CLOWDER_ENABLED}
          - name: APP_NAMESPACE
            value: ${APP_NAMESPACE}
          - name: CW_NULL_WORKAROUND
            value: ${CW_NULL_WORKAROUND}
          - name: REDIS_MAX_CONNECTIONS
            value: ${REDIS_MAX_CONNECTIONS}
          - name: REDIS_SOCKET_CONNECT_TIMEOUT
            value: ${REDIS_SOCKET_CONNECT_TIMEOUT}
          - name: REDIS_SOCKET_TIMEOUT
            value: ${REDIS_SOCKET_TIMEOUT}
          - name: AUTHENTICATE_WITH_ORG_ID
            value: ${AUTHENTICATE_WITH_ORG_ID}
          - name: NOTIFICATIONS_ENABLED
            value: ${NOTIFICATIONS_ENABLED}
          - name: GUNICORN_WORKER_MULTIPLIER
            value: ${GUNICORN_WORKER_MULTIPLIER}
          - name: GUNICORN_THREAD_LIMIT
            value: ${GUNICORN_THREAD_LIMIT}
          - name: NOTIFICATIONS_TOPIC
            value: ${NOTIFICATIONS_TOPIC}
          - name: KAFKA_ENABLED
            value: ${KAFKA_ENABLED}
          - name: EXTERNAL_SYNC_TOPIC
            value: ${EXTERNAL_SYNC_TOPIC}
          - name: EXTERNAL_CHROME_TOPIC
            value: ${EXTERNAL_CHROME_TOPIC}
          - name: MIGRATE_AND_SEED_ON_INIT
            value: ${SERVICE_MIGRATE_AND_SEED_ON_INIT}
          - name: USE_CLOWDER_CA_FOR_BOP
            value: ${USE_CLOWDER_CA_FOR_BOP}
          - name: IT_BYPASS_IT_CALLS
            value: ${IT_BYPASS_IT_CALLS}
          - name: IT_BYPASS_PERMISSIONS_MODIFY_SERVICE_ACCOUNTS
            value: ${IT_BYPASS_PERMISSIONS_MODIFY_SERVICE_ACCOUNTS}
          - name: IT_BYPASS_TOKEN_VALIDATION
            value: ${IT_BYPASS_TOKEN_VALIDATION}
          - name: IT_SERVICE_BASE_PATH
            value: ${IT_SERVICE_BASE_PATH}
          - name: IT_SERVICE_HOST
            value: ${IT_SERVICE_HOST}
          - name: IT_SERVICE_PORT
            value: ${IT_SERVICE_PORT}
          - name: IT_SERVICE_PROTOCOL_SCHEME
            value: ${IT_SERVICE_PROTOCOL_SCHEME}
          - name: IT_SERVICE_TIMEOUT_SECONDS
            value: ${IT_SERVICE_TIMEOUT_SECONDS}
          - name: IT_TOKEN_JKWS_CACHE_LIFETIME
            value: ${IT_TOKEN_JKWS_CACHE_LIFETIME}
    jobs:
      - name: tenant-org-id-populator
        podSpec:
          image: quay.io/cloudservices/tenant-utils:latest
          command:
            - ./org-id-column-populator
            - -C
            - -a
            - account_id
            - -o
            - org_id
            - -t
            - api_tenant
            - --ean-translator-addr
            - http://${TENANT_TRANSLATOR_HOST}:${TENANT_TRANSLATOR_PORT}
            - --batch-size
            - "50"
          env:
            - name: LOG_FORMAT
              value: ${LOG_FORMAT}
            - name: LOG_BATCH_FREQUENCY
              value: '1'
          resources:
            limits:
              cpu: 300m
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 512Mi
      - name: cross-account-request-target-org-populator
        podSpec:
          image: quay.io/cloudservices/tenant-utils:latest
          command:
            - ./org-id-column-populator
            - -C
            - -a
            - target_account
            - -o
            - target_org
            - -t
            - api_crossaccountrequest
            - --ean-translator-addr
            - http://${TENANT_TRANSLATOR_HOST}:${TENANT_TRANSLATOR_PORT}
            - --batch-size
            - "50"
          env:
            - name: LOG_FORMAT
              value: ${LOG_FORMAT}
            - name: LOG_BATCH_FREQUENCY
              value: '1'
          resources:
            limits:
              cpu: 300m
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 512Mi
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: rbac-env
  data:
    api-path-prefix: /api/rbac
    app-config: /opt/rbac/rbac/gunicorn.py
    app-domain: ${APP_DOMAIN}
    app-home: /opt/rbac/rbac
    app-module: rbac.wsgi
    app-namespace: rbac-stage
    database-engine: postgresql
    database-name: rbac
    database-service-name: POSTGRES_SQL
    development: "False"
    django-debug: "False"
    django-log-directory: ""
    django-log-formatter: simple
    django-log-handlers: console
    django-log-level: INFO
    django-logging-file: ""
    postgres-sql-service-host: rbac-pgsql.rbac-stage.svc
    postgres-sql-service-port: "5432"
    rbac-log-level: INFO

# rbac-config ConfigMap
- apiVersion: v1
  data:
    ansible-wisdom-admin-dashboard.json: |
      {
        "roles": [
          {
            "name": "Ansible Wisdom Admin Dashboard user",
            "description": "An Ansible Wisdom Admin Dashboard user role that grants read permissions to Org Admins for all charts.",
            "system": true,
            "admin_default": true,
            "platform_default": false,
            "version": 3,
            "access": [
              {
                "permission": "ansible-wisdom-admin-dashboard:chart-recommendations:read"
              },
              {
                "permission": "ansible-wisdom-admin-dashboard:chart-user-sentiment:read"
              },
              {
                "permission": "ansible-wisdom-admin-dashboard:chart-module-usage:read"
              },
              {
                "permission": "ansible-wisdom-admin-dashboard:chart-active-users:read"
              }
            ]
          }
        ]
      }
    approval.json: |
      {
        "roles": [
          {
            "name": "Approval Administrator",
            "system": true,
            "version": 5,
            "description": "An approval administrator role that grants permissions to manage workflows, requests, actions, and templates.",
            "access": [
              {
                "permission": "approval:templates:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "approval:workflows:create",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "approval:workflows:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "approval:workflows:update",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "approval:workflows:delete",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "approval:workflows:link",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "approval:workflows:unlink",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "approval:requests:create",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "approval:requests:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  },
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "group"
                    }
                  }
                ]
              },
              {
                "permission": "approval:actions:create",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  },
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "group"
                    }
                  }
                ]
              },
              {
                "permission": "approval:actions:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "Approval User",
            "system": true,
            "version": 4,
            "description": "An approval user role which grants permissions to create/read/cancel a request, and read workflows.",
            "platform_default": true,
            "access": [
              {
                "permission": "approval:requests:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "user"
                    }
                  }
                ]
              },
              {
                "permission": "approval:requests:create",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "user"
                    }
                  }
                ]
              },
              {
                "permission": "approval:actions:create",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "user"
                    }
                  }
                ]
              },
              {
                "permission": "approval:actions:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "user"
                    }
                  }
                ]
              },
              {
                "permission": "approval:workflows:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "Approval Approver",
            "system": true,
            "version": 4,
            "description": "An approval approver role that grants permissions to read and approve requests.",
            "access": [
              {
                "permission": "approval:requests:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "group"
                    }
                  }
                ]
              },
              {
                "permission": "approval:actions:create",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "group"
                    }
                  }
                ]
              },
              {
                "permission": "approval:actions:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "group"
                    }
                  }
                ]
              }
            ]
          }
        ]
      }
    automation-analytics.json: |
      {
        "roles": [
          {
            "name": "Automation Analytics Administrator",
            "description": "An Automation Analytics Administrator role that grants ALL permissions.",
            "system": true,
            "platform_default": false,
            "version": 3,
            "access": [
              {
                "permission": "automation-analytics:*:*"
              }
            ]
          },
          {
            "name": "Automation Analytics Editor",
            "description": "An Automation Analytics Editor role that grants read-write permissions.",
            "system": true,
            "platform_default": true,
            "version": 4,
            "access": [
              {
                "permission": "automation-analytics:*:read"
              },
              {
                "permission": "automation-analytics:*:write"
              }
            ]
          },
          {
            "name": "Automation Analytics Viewer",
            "description": "An Automation Analytics Viewer role that grants read permissions.",
            "system": true,
            "platform_default": false,
            "version": 3,
            "access": [
              {
                "permission": "automation-analytics:*:read"
              }
            ]
          }
        ]
      }
    compliance.json: |
      {
        "roles": [
          {
            "name": "Compliance administrator",
            "description": "A Compliance role that grants full access to any Compliance resource.",
            "system": true,
            "admin_default": true,
            "version": 12,
            "access": [
              {
                "permission": "compliance:*:*"
              },
              {
                "permission": "remediations:remediation:read"
              },
              {
                "permission": "remediations:remediation:write"
              }
            ]
          },
          {
            "name": "Compliance viewer",
            "description": "A Compliance role that grants read access to any Compliance resource.",
            "system": true,
            "platform_default": true,
            "version": 5,
            "access": [
              {
                "permission": "compliance:policy:read"
              },
              {
                "permission": "compliance:report:read"
              },
              {
                "permission": "compliance:system:read"
              },
              {
                "permission": "remediations:remediation:read"
              }
            ]
          }
        ]
      }
    config-manager.json: |
      {
        "roles": [
          {
            "name": "RHC Administrator",
            "display_name": "RHC administrator",
            "description": "Perform any operations on RHC manager",
            "system": true,
            "admin_default": true,
            "platform_default": false,
            "version": 6,
            "access": [
              {
                "permission": "config-manager:activation_keys:*"
              },
              {
                "permission": "config-manager:state:read"
              },
              {
                "permission": "config-manager:state:write"
              },
              {
                "permission": "config-manager:state-changes:read"
              },
              {
                "permission": "playbook-dispatcher:run:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "service",
                      "operation": "equal",
                      "value": "config_manager"
                    }
                  }
                ]
              },
              {
                "permission": "subscriptions:organization:read"
              }
            ]
          },
          {
            "name": "RHC Viewer",
            "display_name": "RHC viewer",
            "description": "Can view the current configurations on RHC manager",
            "system": true,
            "platform_default": true,
            "version": 6,
            "access": [
              {
                "permission": "config-manager:activation_keys:read"
              },
              {
                "permission": "config-manager:state:read"
              },
              {
                "permission": "config-manager:state-changes:read"
              },
              {
                "permission": "playbook-dispatcher:run:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "service",
                      "operation": "equal",
                      "value": "config_manager"
                    }
                  }
                ]
              }
            ]
          }
        ]
      }
    content-sources.json: |
      {
          "roles": [
            {
              "name": "Repositories administrator",
              "description": "Perform any available operation against any repositories resource.",
              "system": true,
              "platform_default": false,
              "admin_default": true,
              "version": 2,
              "access": [
                {
                  "permission": "content-sources:repositories:read"
                },
                {
                  "permission": "content-sources:repositories:write"
                }
              ]
            },
            {
              "name": "Repositories viewer",
              "description": "Perform read only operations against repositories resources.",
              "system": true,
              "platform_default": true,
              "version": 2,
              "access": [
                {
                  "permission": "content-sources:repositories:read"
                }
              ]
            }
          ]
        }
    cost-management.json: |
      {
          "roles": [{
              "name": "Cost Administrator",
              "description": "A cost management administrator role that grants read and write permissions.",
              "system": true,
              "admin_default": true,
              "version": 3,
              "access": [{
                  "permission": "cost-management:*:*"
              }]
          }, {
              "name": "Cost Price List Administrator",
              "description": "A cost management role that grants read and write permissions on cost models.",
              "system": true,
              "version": 5,
              "access": [{
                  "permission": "cost-management:cost_model:*"
              }, {
                  "permission": "cost-management:settings:*"
              }]
          }, {
              "name": "Cost Price List Viewer",
              "description": "A cost management role that grants read permissions on cost models.",
              "system": true,
              "version": 4,
              "access": [{
                  "permission": "cost-management:cost_model:read"
              }, {
                  "permission": "cost-management:settings:read"
              }]
          }, {
              "name": "Cost Cloud Viewer",
              "description": "A cost management role that grants read permissions on cost reports related to cloud sources.",
              "system": true,
              "version": 6,
              "access": [{
                  "permission": "cost-management:aws.account:*"
              }, {
                  "permission": "cost-management:aws.organizational_unit:*"
              }, {
                  "permission": "cost-management:azure.subscription_guid:*"
              }, {
                  "permission": "cost-management:gcp.account:*"
              }, {
                  "permission": "cost-management:gcp.project:*"
              }, {
                  "permission": "cost-management:oci.payer_tenant_id:*"
              }]
          }, {
              "name": "Cost OpenShift Viewer",
              "description": "A cost management role that grants read permissions on cost reports related to OpenShift sources.",
              "system": true,
              "version": 2,
              "access": [{
                  "permission": "cost-management:openshift.cluster:*"
              }]
          }]
      }
    drift.json: |
      {
        "roles": [
          {
            "name": "Drift analysis administrator",
            "description": "Perform any available operation against any Drift Analysis resource.",
            "system": true,
            "admin_default": true,
            "version": 13,
            "access": [
              {
                "permission": "drift:comparisons:read"
              },
              {
                "permission": "drift:baselines:read"
              },
              {
                "permission": "drift:baselines:write"
              },
              {
                "permission": "drift:historical-system-profiles:read"
              },
              {
                "permission": "drift:notifications:read"
              },
              {
                "permission": "drift:notifications:write"
              },
              {
                "permission": "drift:*:*"
              }
            ]
          },
          {
            "name": "Drift viewer",
            "description": "Perform read only operation against Drift Analysis resources.",
            "system": true,
            "platform_default": true,
            "version": 4,
            "access": [
              {
                "permission": "drift:comparisons:read"
              },
              {
                "permission": "drift:baselines:read"
              },
              {
                "permission": "drift:historical-system-profiles:read"
              },
              {
                "permission": "drift:notifications:read"
              }
            ]
          }
        ]
      }
    hybrid-committed-spend.json: |
      {
        "roles": [
          {
            "name": "Hybrid Committed Spend viewer",
            "description": "View any Hybrid Committed Spend report.",
            "system": true,
            "admin_default": false,
            "platform_default": false,
            "version": 1,
            "access": [
              {
                "permission": "hybrid-committed-spend:reports:read"
              }
            ]
          }
        ]
      }
    idmsvc.json: |
      {
        "roles": [
          {
            "name": "Domains administrator",
            "description": "Perform any available operation against any domain resource.",
            "system": true,
            "platform_default": false,
            "admin_default": true,
            "version": 1,
            "access": [
              {
                "permission": "idmsvc:token:create"
              },
              {
                "permission": "idmsvc:domains:list"
              },
              {
                "permission": "idmsvc:domains:read"
              },
              {
                "permission": "idmsvc:domains:create"
              },
              {
                "permission": "idmsvc:domains:update"
              },
              {
                "permission": "idmsvc:domains:delete"
              }
            ]
          },
          {
            "name": "Domains viewer",
            "description": "Perform read only operations against domain resources.",
            "system": true,
            "platform_default": true,
            "version": 1,
            "access": [
              {
                "permission": "idmsvc:domains:list"
              },
              {
                "permission": "idmsvc:domains:read"
              }
            ]
          }
        ]
      }
    insights.json: |
      {
        "roles": [
          {
            "name": "Insights administrator",
            "display_name": "RHEL Advisor administrator",
            "description": "Perform any available operation against any RHEL Advisor resource.",
            "system": true,
            "platform_default": true,
            "version": 11,
            "access": [
              {
                "permission": "advisor:*:*"
              }
            ]
          }
        ]
      }
    inventory.json: |
      {
        "roles": [
          {
            "name": "Inventory administrator",
            "description": "Perform any available operation against any Inventory resource.",
            "system": true,
            "platform_default": false,
            "admin_default": false,
            "version": 3,
            "access": [
              {
                "permission": "inventory:*:*"
              }
            ]
          },
          {
            "name": "Inventory Hosts Administrator",
            "description": "Be able to read and edit Inventory Hosts data.",
            "system": true,
            "platform_default": true,
            "admin_default": true,
            "version": 3,
            "access": [
              {
                "permission": "inventory:hosts:write"
              },
              {
                "permission": "inventory:hosts:read"
              }
            ]
          },
          {
            "name": "Inventory Hosts Viewer",
            "description": "Be able to read Inventory Hosts data.",
            "system": true,
            "platform_default": false,
            "admin_default": false,
            "version": 3,
            "access": [
              {
                "permission": "inventory:hosts:read"
              }
            ]
          },
          {
            "name": "Inventory Groups Administrator",
            "description": "Be able to read and edit Inventory Groups data.",
            "system": true,
            "platform_default": false,
            "admin_default": true,
            "version": 3,
            "access": [
              {
                "permission": "inventory:groups:write"
              },
              {
                "permission": "inventory:groups:read"
              }
            ]
          },
          {
            "name": "Inventory Groups Viewer",
            "description": "Be able to read Inventory Groups data.",
            "system": true,
            "platform_default": false,
            "admin_default": false,
            "version": 3,
            "access": [
              {
                "permission": "inventory:groups:read"
              }
            ]
          },
          {
            "name": "Account Staleness and Culling Administrator",
            "description": "Be able to read and edit Account Staleness and Deletion data.",
            "system": true,
            "platform_default": false,
            "admin_default": true,
            "display_name": "Account Staleness and Deletion Administrator",
            "version": 4,
            "access": [
              {
                "permission": "inventory:staleness:write"
              },
              {
                "permission": "inventory:staleness:read"
              }
            ]
          },
          {
            "name": "Account Staleness and Culling Viewer",
            "description": "Be able to read Account Staleness and Deletion data.",
            "system": true,
            "platform_default": true,
            "admin_default": false,
            "display_name": "Account Staleness and Deletion Viewer",
            "version": 4,
            "access": [
              {
                "permission": "inventory:staleness:read"
              }
            ]
          }
        ]
      }
    malware-detection.json: |
      {
        "roles": [
          {
            "name": "Malware detection administrator",
            "display_name": "Malware detection administrator",
            "description": "Perform any available operation against any malware-detection resource.",
            "system": true,
            "admin_default": true,
            "version": 3,
            "access": [
              {
                "permission": "malware-detection:*:*"
              }
            ]
          },
          {
            "name": "Malware detection viewer",
            "display_name": "Malware detection viewer",
            "description": "Read any malware-detection resource.",
            "system": true,
            "version": 2,
            "access": [
              {
                "permission": "malware-detection:*:read"
              }
            ]
          }
        ]
      }
    notifications.json: |
      {
        "roles": [
          {
            "name": "Notifications administrator",
            "description": "Perform any available operation against Notifications and Integrations applications.",
            "system": true,
            "platform_default": false,
            "admin_default": true,
            "version": 4,
            "access": [
              {
                "permission": "notifications:*:*"
              },
              {
                "permission": "integrations:*:*"
              }
            ]
          },
          {
            "name": "Notifications viewer",
            "description": "Read only access to notifications and integrations applications.",
            "system": true,
            "platform_default": false,
            "version": 2,
            "access": [
              {
                "permission": "notifications:notifications:read"
              },
              {
                "permission": "integrations:endpoints:read"
              }
            ]
          }

        ]
      }
    ocm.json: |
      {
        "roles": [
          {
            "name": "OCM Cluster Editor",
            "display_name": "OCM Cluster Editor",
            "description": "Grants permission to edit clusters",
            "system": true,
            "platform_default": false,
            "version": 2,
            "external": {
              "id": "ClusterEditor",
              "tenant": "ocm"
            }
          },
          {
            "name": "OCM Idp Editor",
            "display_name": "OCM Idp Editor",
            "description": "Grants permission to edit idps",
            "system": true,
            "platform_default": false,
            "version": 1,
            "external": {
              "id": "IdpEditor",
              "tenant": "ocm"
            }
          },
          {
            "name": "OCM Machine Pool Editor",
            "display_name": "OCM Machine Pool Editor",
            "description": "Grants permission to edit machine pools",
            "system": true,
            "platform_default": false,
            "version": 1,
            "external": {
              "id": "MachinePoolEditor",
              "tenant": "ocm"
            }
          },
          {
            "name": "OCM Cluster Provisioner",
            "display_name": "OCM Cluster Provisioner",
            "description": "Grants permission to provision clusters",
            "system": true,
            "platform_default": true,
            "version": 3,
            "external": {
              "id": "ClusterProvisioner",
              "tenant": "ocm"
            }
          },
          {
            "name": "OCM Cluster Viewer",
            "display_name": "OCM Cluster Viewer",
            "description": "Grants permission to view clusters",
            "system": true,
            "platform_default": true,
            "version": 3,
            "external": {
              "id": "ClusterViewer",
              "tenant": "ocm"
            }
          },
          {
            "name": "OCM Organization Admin",
            "display_name": "OCM Organization Admin",
            "description": "Grants administrative permissions associated organization's clusters",
            "system": true,
            "platform_default": false,
            "version": 2,
            "external": {
              "id": "OrganizationAdmin",
              "tenant": "ocm"
            }
          },
          {
            "name": "OCM Cluster Autoscaler Editor",
            "display_name": "OCM Cluster Autoscaler Editor",
            "description": "Grants permission to edit cluster autoscaler",
            "system": true,
            "platform_default": false,
            "version": 1,
            "external": {
              "id": "ClusterAutoscalerEditor",
              "tenant": "ocm"
            }
          }
        ]
      }
    ocp-advisor.json: |
      {
        "roles": [
          {
            "name": "OCP Advisor administrator",
            "display_name": "OCP Advisor administrator",
            "description": "Perform any available operation against any OCP Advisor resource.",
            "system": true,
            "platform_default": true,
            "version": 1,
            "access": [
              {
                "permission": "ocp-advisor:*:*"
              }
            ]
          }
        ]
      }
    patch.json: |
      {
        "roles": [
          {
            "name": "Patch administrator",
            "description": "Perform any available operation against any Patch resource.",
            "system": true,
            "platform_default": false,
            "admin_default": true,
            "version": 9,
            "access": [
              {
                "permission": "patch:*:*"
              },
              {
                "permission": "remediations:*:read"
              },
              {
                "permission": "remediations:*:write"
              }
            ]
          },
          {
            "name": "Patch viewer",
            "description": "Read any Patch resource.",
            "system": true,
            "platform_default": true,
            "admin_default": false,
            "version": 4,
            "access": [
              {
                "permission": "patch:*:read"
              }
            ]
          }
        ]
      }
    policies.json: |
      {
        "roles": [
          {
            "name": "Policies administrator",
            "description": "Perform any available operation against any Policies resource.",
            "system": true,
            "admin_default": true,
            "version": 8,
            "access": [
              {
                "permission": "policies:policies:read"
              },
              {
                "permission": "policies:policies:write"
              }
            ]
          },
          {
            "name": "Policies viewer",
            "description": "Perform read only operation against any Policies resource.",
            "system": true,
            "platform_default": true,
            "version": 2,
            "access": [
              {
                "permission": "policies:policies:read"
              }
            ]
          }
        ]
      }
    provisioning.json: |
      {
          "roles": [{
              "name": "Launch Administrator",
              "description": "An launch administrator role that grants read and write permissions.",
              "system": true,
              "admin_default": true,
              "version": 1,
              "access": [{
                  "permission": "provisioning:*:*"
              }]
          }, {
              "name": "Launch Viewer",
              "description": "An launch role that grants read permissions on launch reservation and related resources.",
              "system": true,
              "platform_default": true,
              "version": 2,
              "access": [{
                  "permission": "provisioning:source:read"
              }, {
                  "permission": "provisioning:pubkey:read"
              }, {
                  "permission": "provisioning:reservation:read"
              }, {
                  "permission": "provisioning:reservation.aws:read"
              }, {
                  "permission": "provisioning:reservation.azure:read"
              }, {
                  "permission": "provisioning:reservation.gcp:read"
              }]
          }, {
              "name": "Launch on AWS User",
              "description": "An AWS launch role that grants write permissions on launch reservation and related resources.",
              "system": true,
              "version": 2,
              "access": [{
                  "permission": "provisioning:source:*"
              }, {
                  "permission": "provisioning:pubkey:*"
              }, {
                  "permission": "provisioning:reservation:*"
              }, {
                  "permission": "provisioning:reservation.aws:*"
              }]
          }, {
              "name": "Launch on Azure User",
              "description": "An Azure launch role that grants write permissions on launch reservation and related resources.",
              "system": true,
              "version": 2,
              "access": [{
                  "permission": "provisioning:source:*"
              }, {
                  "permission": "provisioning:pubkey:*"
              }, {
                  "permission": "provisioning:reservation:*"
              }, {
                  "permission": "provisioning:reservation.azure:*"
              }]
          }, {
              "name": "Launch on Google Cloud User",
              "description": "An Google Cloud launch role that grants write permissions on launch reservation and related resources.",
              "system": true,
              "version": 2,
              "access": [{
                  "permission": "provisioning:source:*"
              }, {
                  "permission": "provisioning:pubkey:*"
              }, {
                  "permission": "provisioning:reservation:*"
              }, {
                  "permission": "provisioning:reservation.gcp:*"
              }]
          }]
      }
    rbac.json: |
      {
        "roles": [
          {
            "name": "User Access administrator",
            "display_name": "User Access administrator",
            "description": "Grants a non-org admin full access to configure and manage user access to services hosted on console.redhat.com. This role can only be viewed and assigned by Organization Administrators.",
            "system": true,
            "admin_default": true,
            "platform_default": false,
            "version": 3,
            "access": [
              {
                "permission": "rbac:*:*"
              }
            ]
          },
          {
            "name": "User Access principal viewer",
            "display_name": "User Access principal viewer",
            "description": "Grants a non-org admin read access to principals within user access.",
            "system": true,
            "platform_default": false,
            "version": 1,
            "access": [
              {
                "permission": "rbac:principal:read"
              }
            ]
          }
        ]
      }
    remediations.json: |
      {
        "roles": [
          {
            "name": "Remediations administrator",
            "description": "Perform any available operation against any Remediations resource",
            "system": true,
            "platform_default": false,
            "version": 8,
            "access": [
              {
                "permission": "remediations:*:*"
              },
              {
                "permission": "playbook-dispatcher:run:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "service",
                      "operation": "equal",
                      "value": "remediations"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "Remediations user",
            "description": "Perform create, view, update, delete operations against any Remediations resource.",
            "system": true,
            "platform_default": true,
            "version": 5,
            "access": [
              {
                "permission": "remediations:remediation:read"
              },
              {
                "permission": "remediations:remediation:write"
              },
              {
                "permission": "playbook-dispatcher:run:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "service",
                      "operation": "equal",
                      "value": "remediations"
                    }
                  }
                ]
              }
            ]
          }
        ]
      }
    ros.json: |
      {
          "roles": [
            {
              "name": "Resource Optimization administrator",
              "description": "Perform any available operation against any Resource Optimization resource.",
              "system": true,
              "platform_default": false,
              "admin_default": true,
              "version": 3,
              "access": [
                {
                  "permission": "ros:*:*"
                }
              ]
            },
            {
              "name": "Resource Optimization user",
              "description": "A Resource Optimization user role that grants read only permission.",
              "system": true,
              "platform_default": true,
              "version": 2,
              "access": [
                {
                  "permission": "ros:*:read"
                }
              ]
            }
          ]
      }
    sources.json: |
      {
        "roles": [
          {
            "name": "Sources administrator",
            "description": "Perform any available operation against any Source",
            "system": true,
            "platform_default": false,
            "admin_default": true,
            "version": 4,
            "access": [
              {
                "permission": "sources:*:*"
              }
            ]
          }
        ]
      }
    subscriptions.json: |
      {
        "roles": [
          {
            "name": "Subscription Watch administrator",
            "display_name": "Subscriptions administrator",
            "description": "Perform any available operation against any Subscriptions resource.",
            "system": true,
            "admin_default": true,
            "platform_default": false,
            "version": 7,
            "access": [
              {
                "permission": "subscriptions:*:*"
              }
            ]
          },
          {
            "name": "Subscriptions user",
            "description": "View any Subscriptions resource.",
            "system": true,
            "platform_default": true,
            "version": 5,
            "access": [
              {
                "permission": "subscriptions:reports:read"
              },
              {
                "permission": "subscriptions:manifests:read"
              },
              {
                "permission": "subscriptions:organization:read"
              },
              {
                "permission": "subscriptions:products:read"
              },
              {
                "permission": "subscriptions:cloud_access:read"
              }
            ]
          }
        ]
      }
    tasks.json: |
      {
        "roles": [
          {
            "name": "Tasks administrator",
            "description": "Perform any available operation against any Tasks resource.",
            "system": true,
            "platform_default": false,
            "admin_default": true,
            "version": 3,
            "access": [
              {
                "permission": "tasks:*:*"
              },
              {
                "permission": "playbook-dispatcher:run:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "service",
                      "operation": "equal",
                      "value": "tasks"
                    }
                  }
                ]
              }
            ]
          }
        ]
      }
    vulnerability.json: |
      {
        "roles": [
          {
            "name": "Vulnerability administrator",
            "description": "Perform any available operation against any Vulnerability resource.",
            "system": true,
            "platform_default": false,
            "admin_default": true,
            "version": 11,
            "access": [
              {
                "permission": "vulnerability:*:*"
              },
              {
                "permission": "remediations:*:read"
              },
              {
                "permission": "remediations:*:write"
              }
            ]
          },
          {
            "name": "Vulnerability viewer",
            "description": "Read any Vulnerability resource.",
            "system": true,
            "platform_default": true,
            "admin_default": false,
            "version": 4,
            "access": [
              {
                "permission": "vulnerability:vulnerability_results:read"
              },
              {
                "permission": "vulnerability:system.opt_out:read"
              },
              {
                "permission": "vulnerability:report_and_export:read"
              },
              {
                "permission": "vulnerability:advanced_report:read"
              }
            ]
          }
        ]
      }
  kind: ConfigMap
  metadata:
    name: rbac-config

# model-access-permissions ConfigMap
- apiVersion: v1
  data:
    advisor.json: |
      {
          "*": [
              {
                  "verb": "*"
              }
          ],
          "disable-recommendations": [
              {
                  "verb": "write"
              }
          ],
          "weekly-email": [
              {
                  "verb": "read"
              }
          ],
          "recommendation-results": [
              {
                  "verb": "read"
              }
          ],
          "exports": [
              {
                  "verb": "read"
              }
          ]
      }
    approval.json: |
      {
          "actions": [
              {
                  "verb": "create"
              },
              {
                  "verb": "read"
              }
          ],
          "requests": [
              {
                  "verb": "create"
              },
              {
                  "verb": "read"
              }
          ],
          "templates": [
              {
                  "verb": "read"
              }
          ],
          "workflows": [
              {
                  "verb": "create"
              },
              {
                  "verb": "read"
              },
              {
                  "verb": "update"
              },
              {
                  "verb": "delete"
              },
              {
                  "verb": "link"
              },
              {
                  "verb": "unlink"
              }
          ]
      }
    automation-analytics.json: |
      {
          "*": [
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              },
              {
                  "verb": "*"
              }
          ]
      }
    catalog.json: |
      {
          "approval_requests": [
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              }
          ],
          "orders": [
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              },
              {
                  "verb": "order"
              }
          ],
          "order_items": [
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              },
              {
                  "verb": "order"
              }
          ],
          "order_processes": [
              {
                  "verb": "create"
              },
              {
                  "verb": "read"
              },
              {
                  "verb": "link"
              },
              {
                  "verb": "unlink"
              },
              {
                  "verb": "update"
              },
              {
                  "verb": "delete"
              }
          ],
          "portfolios": [
              {
                  "verb": "create"
              },
              {
                  "verb": "read"
              },
              {
                  "verb": "update"
              },
              {
                  "verb": "delete"
              },
              {
                  "verb": "order"
              }
          ],
          "portfolio_items": [
              {
                  "verb": "create"
              },
              {
                  "verb": "read"
              },
              {
                  "verb": "update"
              },
              {
                  "verb": "delete"
              },
              {
                  "verb": "order"
              }
          ],
          "progress_messages": [
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              }
          ],
          "tenants": [
              {
                  "verb": "read"
              },
              {
                  "verb": "update"
              }
          ]
      }
    compliance.json: |
      {
          "*": [
              {
                  "verb": "*"
              }
          ],
          "system": [
            {
              "verb": "read"
            }
          ],
          "report": [
            {
              "verb": "read"
            },
            {
              "verb": "delete"
            }
          ],
          "policy": [
            {
              "verb": "read"
            },
            {
              "verb": "create"
            },
            {
              "verb": "update"
            },
            {
              "verb": "delete"
            },
            {
              "verb": "write"
            }
          ]
      }
    config-manager.json: |
      {
          "activation_keys": [
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              },
              {
                  "verb": "*"
              }
          ],
          "state": [
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              }
          ],
          "state-changes": [
              {
                  "verb": "read"
              }
          ]
      }
    content-sources.json: |
      {
          "repositories": [
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              }
          ],
          "*": [
              {
                  "verb": "*"
              }
          ]
      }
    cost-management.json: |
      {
          "aws.account": [
              {
                  "verb": "*"
              },
              {
                  "verb": "read"
              }
          ],
          "aws.organizational_unit": [
              {
                  "verb": "*"
              },
              {
                  "verb": "read"
              }
          ],
          "azure.subscription_guid": [
              {
                  "verb": "*"
              },
              {
                  "verb": "read"
              }
          ],
          "gcp.account": [
              {
                  "verb": "*"
              },
              {
                  "verb": "read"
              }
          ],
          "gcp.project": [
              {
                  "verb": "*"
              },
              {
                  "verb": "read"
              }
          ],
          "oci.payer_tenant_id": [
              {
                  "verb": "*"
              },
              {
                  "verb": "read"
              }
          ],
          "openshift.cluster": [
              {
                  "verb": "*"
              },
              {
                  "verb": "read"
              }
          ],
          "openshift.node": [
              {
                  "verb": "*"
              },
              {
                  "verb": "read"
              }
          ],
          "openshift.project": [
              {
                  "verb": "*"
              },
              {
                  "verb": "read"
              }
          ],
          "cost_model": [
              {
                  "verb": "*"
              },
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              }
          ],
          "settings": [
              {
                  "verb": "*"
              },
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              }
          ],
          "*": [
              {
                  "verb": "*"
              }
          ]
      }
    drift.json: |
      {
        "*": [
          {
            "verb": "*"
          }
        ],
        "comparisons": [
          {
            "verb": "read"
          }
        ],
        "baselines": [
          {
            "verb": "read"
          },
          {
            "verb": "write"
          }
        ],
        "historical-system-profiles": [
          {
            "verb": "read"
          }
        ],
        "notifications": [
          {
            "verb": "read"
          },
          {
            "verb": "write"
          }
        ]
      }
    hybrid-committed-spend.json: |
      {
          "reports": [
              {
                  "verb": "read"
              }
          ]
      }
    integrations.json: |
      {
          "endpoints": [
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              }
          ],
          "*": [
              {
                  "verb": "*"
              }
          ]
      }
    inventory.json: |
      {
          "*": [
              {
                  "verb": "read"
              },
              {
                  "verb": "*"
              }
          ],
          "hosts": [
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              },
              {
                  "verb": "*"
              }
          ],
          "groups": [
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              },
              {
                  "verb": "*"
              }
          ],
          "staleness": [
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              },
              {
                  "verb": "*"
              }
          ]
      }
    malware-detection.json: |
      {
          "*": [
              {
                  "verb": "*"
              },
              {
                  "verb": "read"
              }
          ]
      }
    migration-analytics.json: |
      {
          "*": [
              {
                  "verb": "*"
              }
          ]
      }
    notifications.json: |
      {
          "notifications": [
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              }
          ],
          "events" : [
              {
                  "verb": "read"
              }
          ],
          "*": [
              {
                  "verb": "*"
              }
          ]
      }
    ocp-advisor.json: |
      {
        "*": [
          {
            "verb": "*"
          }
        ],
        "toggle-recommendations": [
          {
            "verb": "write"
          }
        ],
        "recommendation-results": [
          {
            "verb": "read"
          }
        ],
        "exports": [
          {
            "verb": "read"
          }
        ]
      }
    patch.json: |
      {
          "*": [
              {
                  "verb": "*"
              },
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              }
          ],
          "system": [
              {
                  "verb": "write"
              }
          ],
          "template": [
              {
                  "verb": "write"
              }
          ]
      }
    playbook-dispatcher.json: |
      {
          "run": [
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              }
          ]
      }
    policies.json: |
      {
          "policies": [
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              }
          ],
          "*": [
              {
                  "verb": "*"
              }
          ]
      }
    provisioning.json: |
      {
          "source": [
              {
                  "verb": "*"
              },
              {
                  "verb": "read"
              }
          ],
          "pubkey": [
              {
                  "verb": "*"
              },
              {
                  "verb": "read"
              },
              {
                  "verb": "write",
                  "requires": [
                      "read"
                  ]
              }
          ],
          "reservation": [
              {
                  "verb": "*"
              },
              {
                  "verb": "read"
              },
              {
                  "verb": "write",
                  "requires": [
                      "read"
                  ]
              }
          ],
          "reservation.aws": [
              {
                  "verb": "*"
              },
              {
                  "verb": "read"
              },
              {
                  "verb": "write",
                  "requires": [
                      "read"
                  ]
              }
          ],
          "reservation.azure": [
              {
                  "verb": "*"
              },
              {
                  "verb": "read"
              },
              {
                  "verb": "write",
                  "requires": [
                      "read"
                  ]
              }
          ],
          "reservation.gcp": [
              {
                  "verb": "*"
              },
              {
                  "verb": "read"
              },
              {
                  "verb": "write",
                  "requires": [
                      "read"
                  ]
              }
          ],
          "*": [
              {
                  "verb": "*"
              }
          ]
      }
    remediations.json: |
      {
          "remediation": [
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              },
              {
                  "verb": "execute"
              }
          ],
          "*": [
              {
                  "verb": "*"
              }
          ]
      }
    ros.json: |
      {
          "*": [
              {
                  "verb": "*"
              },
              {
                  "verb": "read"
              }
          ]
      }
    sources.json: |
      {
          "*": [
              {
                  "verb": "*"
              }
          ]
      }
    subscriptions.json: |
      {
          "reports": [
              {
                  "verb": "read"
              }
          ],
          "manifests": [
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              }
          ],
          "organization": [
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              }
          ],
          "products": [
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              }
          ],
          "cloud_access": [
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              }
          ],
          "*": [
              {
                  "verb": "*"
              }
          ]
      }
    tasks.json: |
      {
          "*": [
              {
                  "verb": "*"
              }
          ]
      }
    vulnerability.json: |
      {
          "*": [
              {
                  "verb": "read"
              },
              {
                  "verb": "write"
              },
              {
                  "verb": "*"
              }
          ],
          "vulnerability_results": [
              {
                  "verb": "read"
              }
          ],
          "cve.business_risk_and_status": [
              {
                  "verb": "write"
              }
          ],
          "system.cve.status": [
              {
                  "verb": "write"
              }
          ],
          "advanced_report": [
              {
                  "verb": "read"
              }
          ],
          "report_and_export": [
              {
                  "verb": "read"
              }
          ],
          "system.opt_out": [
              {
                  "verb": "write"
              },
              {
                  "verb": "read"
              }
          ],
          "toggle_cves_without_errata": [
              {
                  "verb": "write"
              }
          ]
      }
  kind: ConfigMap
  metadata:
    name: model-access-permissions

- apiVersion: v1
  kind: Secret
  metadata:
    name: rbac-psks
  data:
    psks.json: >-
      ewogICJhZHZpc29yIjogewogICAgImFsdC1zZWNyZXQiOiAiMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTEiCiAgfSwKICAiYXBwcm92YWwiOiB7CiAgICAiYWx0LXNlY3JldCI6ICIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMiIKICB9LAogICJub3RpZmljYXRpb25zIjogewogICAgImFsdC1zZWNyZXQiOiAiMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMiCiAgfQp9
  type: Opaque
- apiVersion: v1
  kind: Secret
  metadata:
    name: insights-rbac
  data:
    client-id: aW5zaWdodHMtcmJhYw==
    token: MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMg==
  type: Opaque
- apiVersion: v1
  kind: Secret
  metadata:
    name: rbac-secret
  data:
    django-secret-key: MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTE=
    principal-proxy-api-token: >-
      MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMg==
    principal-proxy-client-id: aW5zaWdodHMtcmJhYw==
    principal-proxy-env: c3RhZ2U=
    principal-proxy-host: bWJvcA==
    principal-proxy-port: ODA5MA==
    principal-proxy-protocol: aHR0cA==
    principal-proxy-source-cert: RmFsc2U=
    principal-proxy-ssl-verify: RmFsc2U=
    sentry-dsn: ''
  type: Opaque
- apiVersion: v1
  kind: Secret
  metadata:
    name: service-accounts
  data:
    cert: MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTE=
    key: MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMg==
  type: Opaque

parameters:
- description: Image name
  name: IMAGE
  value: quay.io/cloudservices/rbac
- description: Determines Clowder deployment
  name: CLOWDER_ENABLED
  value: "true"
- description: ClowdEnv Name
  name: ENV_NAME
  required: true
- description: Initial amount of memory the Django container will request.
  displayName: Memory Request
  name: MEMORY_REQUEST
  value: 512Mi
- description: Maximum amount of memory the Django container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  value: 1Gi
- description: Initial amount of cpu the Django container will request.
  displayName: CPU Request
  name: CPU_REQUEST
  value: 200m
- description: Maximum amount of cpu the Django container can use.
  displayName: CPU Limit
  name: CPU_LIMIT
  value: 700m
- displayName: RBAC PSKs
  name: RBAC_PSKS
  value: rbac-psks
- displayName: Service Dependency Name
  name: SERVICE_DEPENDENCY_NAME
  value: rbac-pgsql
- displayName: API Prefix Path
  name: API_PATH_PREFIX
  value: /api/rbac
- displayName: Development
  name: DEVELOPMENT
  value: 'false'
- displayName: Rbac log level
  name: RBAC_LOG_LEVEL
  value: INFO
- displayName: Django log level
  name: DJANGO_LOG_LEVEL
  value: INFO
- displayName: Django log formatter
  name: DJANGO_LOG_FORMATTER
  value: simple
- displayName: Django log handlers
  name: DJANGO_LOG_HANDLERS
  value: console,ecs
- displayName: Django log directory
  name: DJANGO_LOG_DIRECTORY
- displayName: Django logging file
  name: DJANGO_LOGGING_FILE
- description: Name of the rbac-config config map
  name: CONFIG_MAP_NAME
  value: rbac-config
- description: Name of the predefined access permissions config map
  name: MODEL_ACCESS_PERMISSIONS
  value: model-access-permissions
- description: minimum number of pods to use when autoscaling is enabled
  name: MIN_REPLICAS
  value: '1'
- description: maximum number of pods to use when autoscaling is enabled
  name: MAX_REPLICAS
  value: '1'
- description: minimum number of pods to use when autoscaling is enabled for worker service
  name: MIN_WORKER_REPLICAS
  value: '1'
- description: minimum number of pods to use when autoscaling is enabled for scheduler service
  name: MIN_SCHEDULER_REPLICAS
  value: '1'
- description: target CPU utilization for the service
  name: TARGET_CPU_UTILIZATION
  value: '90'
- description: 'Options can be found in the doc: https://www.postgresql.org/docs/current/libpq-ssl.html#LIBPQ-SSL-SSLMODE-STATEMENTS'
  displayName: Postgres SSL mode
  name: PGSSLMODE
  value: prefer
- description: Python boolean value to enable/disable permission seeding on app boot
  name: PERMISSION_SEEDING_ENABLED
  required: true
- description: Python boolean value to enable/disable role seeding on app boot
  name: ROLE_SEEDING_ENABLED
  required: true
- description: Python boolean value to enable/disable group seeding on app boot
  name: GROUP_SEEDING_ENABLED
  required: true
- description: Enable the RBAC access cache
  name: ACCESS_CACHE_ENABLED
  value: 'True'
- description: Bypass interaction with the BOP service
  name: BYPASS_BOP_VERIFICATION
  value: 'False'
- description: Application allow list for role creation in RBAC
  name: ROLE_CREATE_ALLOW_LIST
  value: cost-management,remediations,inventory,drift,policies,advisor,catalog,approval,vulnerability,compliance,automation-analytics,notifications,patch,integrations,ros,staleness,config-manager
- description: Timestamp expiration allowance on destructive actions through the internal
    RBAC API
  name: RBAC_DESTRUCTIVE_ENABLED_UNTIL
  value: ''
- description: Image tag
  name: IMAGE_TAG
  required: true
- description: Name of DB secret
  name: DB_SECRET_NAME
  value: rbac-db
- description: The name assigned to all frontend objects defined in this template.
  displayName: Name
  name: NAME
  value: rbac
- description: Initial amount of CPU the Flower container will request.
  displayName: Celery scheduler CPU Resource Request
  name: CELERY_SCHEDULER_CPU_REQUEST
  value: 100m
- description: Maximum amount of CPU the scheduler container can use.
  displayName: CPU Limit
  name: CELERY_SCHEDULER_CPU_LIMIT
  value: 300m
- description: Initial amount of memory the scheduler container will request.
  displayName: Celery scheduler Memory Resource Request
  name: CELERY_SCHEDULER_MEMORY_REQUEST
  value: 256Mi
- description: Maximum amount of memory the scheduler container can use.
  displayName: Memory Limit
  name: CELERY_SCHEDULER_MEMORY_LIMIT
  value: 512Mi
- description: Initial amount of CPU the worker container will request.
  displayName: Celery worker CPU Resource Request
  name: CELERY_WORKER_CPU_REQUEST
  value: 100m
- description: Maximum amount of CPU the worker container can use.
  displayName: CPU Limit
  name: CELERY_WORKER_CPU_LIMIT
  value: 300m
- description: Initial amount of memory the worker container will request.
  displayName: Celery worker Memory Resource Request
  name: CELERY_WORKER_MEMORY_REQUEST
  value: 256Mi
- description: Maximum amount of memory the worker container can use.
  displayName: Memory Limit
  name: CELERY_WORKER_MEMORY_LIMIT
  value: 512Mi
- displayName: Django Debug
  name: DJANGO_DEBUG
  value: 'False'
- displayName: Django log level
  name: DJANGO_LOG_LEVEL
  value: INFO
- description: 'Options can be found in the doc: https://www.postgresql.org/docs/current/libpq-ssl.html#LIBPQ-SSL-SSLMODE-STATEMENTS'
  displayName: Postgres SSL mode
  name: PGSSLMODE
  value: prefer
- description: Name of the rbac-config config map
  name: CONFIG_MAP_NAME
  value: rbac-config
- description: Name of the predefined access permissions config map
  name: MODEL_ACCESS_PERMISSIONS
  value: model-access-permissions
- description: Name of DB secret
  name: DB_SECRET_NAME
  value: rbac-db
- name: APP_NAMESPACE
  value: 'rbac'
- name: CW_NULL_WORKAROUND
  value: 'true'
- name: CELERY_INITIAL_DELAY_SEC
  value: "30"
- name: CELERY_PERIOD_SEC
  value: "300"
- description: Default number of threads to use for seeding
  name: MAX_SEED_THREADS
  value: "2"
- description: max_connections for redis client
  name: REDIS_MAX_CONNECTIONS
  value: "10"
- description: socket connect timeout for redis
  name: REDIS_SOCKET_CONNECT_TIMEOUT
  value: "0.1"
- description: socket timeout for redis
  name: REDIS_SOCKET_TIMEOUT
  value: "0.1"
- description: Enable sending out notification events
  name: NOTIFICATIONS_ENABLED
  value: 'False'
- description: Enable sending out notification events of Red Hat changes
  name: NOTIFICATIONS_RH_ENABLED
  value: 'False'
- description: Enable RBAC tenancy using Org ID
  name: AUTHENTICATE_WITH_ORG_ID
  value: 'True'
- name: TENANT_TRANSLATOR_HOST
  required: true
- name: TENANT_TRANSLATOR_PORT
  value: '8892'
- name: GUNICORN_WORKER_MULTIPLIER
  value: '2'
- name: GUNICORN_THREAD_LIMIT
  value: '10'
- name: NOTIFICATIONS_TOPIC
  value: 'platform.notifications.ingress'
- description: Enable kafka
  name: KAFKA_ENABLED
  value: 'False'
- name: EXTERNAL_SYNC_TOPIC
  value: 'platform.rbac.sync'
- name: EXTERNAL_CHROME_TOPIC
  value: 'platform.chrome'
- name: SERVICE_MIGRATE_AND_SEED_ON_INIT
  value: 'True'
- name: WORKER_MIGRATE_AND_SEED_ON_INIT
  value: 'False'
- name: GLITCHTIP_SECRET
  value: 'rbac-secret'
- name: USE_CLOWDER_CA_FOR_BOP
  value: 'False'
- name: IT_BYPASS_IT_CALLS
  description: Bypass calling IT for fetching real service accounts and to use mocked responses instead?
  value: 'False'
- name: IT_BYPASS_PERMISSIONS_MODIFY_SERVICE_ACCOUNTS
  description: Bypass the permissions check for when a user wants to add or remove a service account from a group?
  value: 'False'
- name: IT_BYPASS_TOKEN_VALIDATION
  description: Bypass validating the token that the user must provide in the Authorization header for making IT calls?
  value: 'False'
- name: IT_SERVICE_BASE_PATH
  description: Path of the IT service's API
  value: '/auth/realms/redhat-external/apis'
- name: IT_SERVICE_HOST
  description: Host of the IT service
  required: true
- name: IT_SERVICE_PORT
  description: Port of the IT service
  value: '443'
- name: IT_SERVICE_PROTOCOL_SCHEME
  description: Protocol scheme of the IT service
  value: 'https'
- name: IT_SERVICE_TIMEOUT_SECONDS
  description: Number of seconds to wait for a response from IT before timing out and failing the request
  value: '10'
- name: IT_TOKEN_JKWS_CACHE_LIFETIME
  value: '28800'
- name: PRINCIPAL_CLEANUP_DELETION_ENABLED_UMB
  description: Allow cleanup job to delete principals via messages from UMB
  value: 'False'
- name: UMB_HOST
  description: Host of the UMB service
  value: 'localhost'
- name: UMB_PORT
  description: Port of the UMB service
  value: '61612'
- name: SA_NAME
  description: Name of the rbac service account
  value: 'nonprod-hcc-rbac'
- name: BONFIRE_DEPENDENCIES
  description: A comma separated list of non ClowdApp dependencies for bonfire to deploy
  value: "model-access-permissions-yml-stage,rbac-config-yml-stage"
