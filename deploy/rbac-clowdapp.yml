---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rbac
objects:
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: rbac
  spec:
    envName: ${ENV_NAME}
    testing:
      iqePlugin: rbac
    database:
      name: rbac
      dbVolumeSize: medium
    inMemoryDb: true
    kafkaTopics:
    - topicName: ${NOTIFICATIONS_TOPIC}
      partitions: 3
      replicas: 3
    - topicName: ${EXTERNAL_SYNC_TOPIC}
      partitions: 1
      replicas: 3
    deployments:
    - name: worker-service
      minReplicas: ${{MIN_WORKER_REPLICAS}}
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        initContainers:
          - env:
            inheritEnv: true
            command:
              - sh
              - /opt/rbac/deploy/init-container-setup.sh
        command:
          - /bin/bash
          - '-c'
          - >
            PYTHONPATH=${PWD}/rbac/ celery -A
            rbac.celery worker -l $DJANGO_LOG_LEVEL
        livenessProbe:
          exec:
            command:
              - /bin/bash
              - '-c'
              - >
                PYTHONPATH=${PWD}/rbac/ celery -A rbac.celery
                inspect ping
          failureThreshold: 3
          initialDelaySeconds: ${{CELERY_INITIAL_DELAY_SEC}}
          periodSeconds: ${{CELERY_PERIOD_SEC}}
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          exec:
            command:
              - /bin/bash
              - '-c'
              - >
                PYTHONPATH=${PWD}/rbac/ celery -A rbac.celery
                inspect ping
          failureThreshold: 3
          periodSeconds: ${{CELERY_PERIOD_SEC}}
          successThreshold: 1
          timeoutSeconds: 10
        volumeMounts:
        - mountPath: /opt/rbac/rbac/management/role/definitions
          name: default-role-config
        - mountPath: /opt/rbac/rbac/management/role/permissions
          name: model-access-permissions
        volumes:
        - configMap:
            name: ${CONFIG_MAP_NAME}
          name: default-role-config
        - configMap:
            name: ${MODEL_ACCESS_PERMISSIONS}
          name: model-access-permissions
        resources:
          limits:
            cpu: ${CELERY_WORKER_CPU_LIMIT}
            memory: ${CELERY_WORKER_MEMORY_LIMIT}
          requests:
            cpu: ${CELERY_WORKER_CPU_REQUEST}
            memory: ${CELERY_WORKER_MEMORY_REQUEST}
        env:
          - name: AUTHENTICATE_WITH_ORG_ID
            value: ${AUTHENTICATE_WITH_ORG_ID}
          - name: DJANGO_LOG_LEVEL
            value: ${DJANGO_LOG_LEVEL}
          - name: DJANGO_DEBUG
            value: ${DJANGO_DEBUG}
          - name: PERMISSION_SEEDING_ENABLED
            value: 'False'
          - name: ROLE_SEEDING_ENABLED
            value: 'False'
          - name: GROUP_SEEDING_ENABLED
            value: 'False'
          - name: DJANGO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: django-secret-key
                name: ${NAME}-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_PROTOCOL
            valueFrom:
              secretKeyRef:
                key: principal-proxy-protocol
                name: ${NAME}-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_HOST
            valueFrom:
              secretKeyRef:
                key: principal-proxy-host
                name: ${NAME}-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_PORT
            valueFrom:
              secretKeyRef:
                key: principal-proxy-port
                name: ${NAME}-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_PATH
            value: ''
          - name: PRINCIPAL_PROXY_USER_ENV
            valueFrom:
              secretKeyRef:
                key: principal-proxy-env
                name: ${NAME}-secret
                optional: false
          - name: PRINCIPAL_PROXY_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: client-id
                name: insights-rbac
                optional: false
          - name: PRINCIPAL_PROXY_API_TOKEN
            valueFrom:
              secretKeyRef:
                key: token
                name: insights-rbac
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_SSL_VERIFY
            valueFrom:
              secretKeyRef:
                key: principal-proxy-ssl-verify
                name: ${NAME}-secret
                optional: true
          - name: PRINCIPAL_PROXY_SERVICE_SOURCE_CERT
            valueFrom:
              secretKeyRef:
                key: principal-proxy-source-cert
                name: ${NAME}-secret
                optional: true
          - name: APP_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: PGSSLMODE
            value: ${PGSSLMODE}
          - name: CLOWDER_ENABLED
            value: ${CLOWDER_ENABLED}
          - name: CW_NULL_WORKAROUND
            value: ${CW_NULL_WORKAROUND}
          - name: SENTRY_DSN
            valueFrom:
              secretKeyRef:
                key: sentry-dsn
                name: rbac-secret
                optional: true
          - name: MAX_SEED_THREADS
            value: ${MAX_SEED_THREADS}
          - name: ACCESS_CACHE_CONNECT_SIGNALS
            value: 'False'
          - name: NOTIFICATIONS_ENABLED
            value: ${NOTIFICATIONS_ENABLED}
          - name: NOTIFICATIONS_RH_ENABLED
            value: ${NOTIFICATIONS_RH_ENABLED}
          - name: KAFKA_ENABLED
            value: ${KAFKA_ENABLED}
          - name: NOTIFICATIONS_TOPIC
            value: ${NOTIFICATIONS_TOPIC}
          - name: EXTERNAL_SYNC_TOPIC
            value: ${EXTERNAL_SYNC_TOPIC}
          - name: MIGRATE_AND_SEED_ON_INIT
            value: ${WORKER_MIGRATE_AND_SEED_ON_INIT}

    - name: scheduler-service
      minReplicas: ${{MIN_SCHEDULER_REPLICAS}}
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        command:
          - /bin/bash
          - '-c'
          - >
            PYTHONPATH=${PWD}/rbac/ celery -A
            rbac.celery beat -l $DJANGO_LOG_LEVEL
        livenessProbe:
          exec:
            command:
              - /bin/bash
              - '-c'
              - >
                PYTHONPATH=${PWD}/rbac/ celery -A rbac.celery
                inspect ping
          failureThreshold: 3
          initialDelaySeconds: ${{CELERY_INITIAL_DELAY_SEC}}
          periodSeconds: ${{CELERY_PERIOD_SEC}}
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          exec:
            command:
              - /bin/bash
              - '-c'
              - >
                PYTHONPATH=${PWD}/rbac/ celery -A rbac.celery
                inspect ping
          failureThreshold: 3
          periodSeconds: ${{CELERY_PERIOD_SEC}}
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: ${CELERY_SCHEDULER_CPU_LIMIT}
            memory: ${CELERY_SCHEDULER_MEMORY_LIMIT}
          requests:
            cpu: ${CELERY_SCHEDULER_CPU_REQUEST}
            memory: ${CELERY_SCHEDULER_MEMORY_REQUEST}
        env:
        - name: AUTHENTICATE_WITH_ORG_ID
          value: ${AUTHENTICATE_WITH_ORG_ID}
        - name: DJANGO_LOG_LEVEL
          value: ${DJANGO_LOG_LEVEL}
        - name: DJANGO_DEBUG
          value: ${DJANGO_DEBUG}
        - name: APP_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PERMISSION_SEEDING_ENABLED
          value: 'False'
        - name: ROLE_SEEDING_ENABLED
          value: 'False'
        - name: GROUP_SEEDING_ENABLED
          value: 'False'
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: CW_NULL_WORKAROUND
          value: ${CW_NULL_WORKAROUND}
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              key: sentry-dsn
              name: rbac-secret
              optional: true

    - name: service
      minReplicas: ${{MIN_REPLICAS}}
      webServices:
        public:
          enabled: true
          apiPath: rbac
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        initContainers:
          - env:
            inheritEnv: true
            command:
              - sh
              - /opt/rbac/deploy/init-container-setup.sh
        livenessProbe:
          httpGet:
            path: /api/rbac/v1/status/
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /api/rbac/v1/status/
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 3
        volumes:
        - configMap:
            name: ${CONFIG_MAP_NAME}
          name: default-role-config
        - configMap:
            name: ${MODEL_ACCESS_PERMISSIONS}
          name: model-access-permissions
        volumeMounts:
        - mountPath: /opt/rbac/rbac/management/role/definitions
          name: default-role-config
        - mountPath: /opt/rbac/rbac/management/role/permissions
          name: model-access-permissions
        resources:
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
          requests:
            cpu: ${CPU_REQUEST}
            memory: ${MEMORY_REQUEST}
        env:
          - name: SENTRY_DSN
            valueFrom:
              secretKeyRef:
                key: sentry-dsn
                name: rbac-secret
                optional: true
          - name: SERVICE_PSKS
            valueFrom:
              secretKeyRef:
                key: psks.json
                name: ${RBAC_PSKS}
                optional: false
          - name: PGSSLMODE
            value: ${PGSSLMODE}
          - name: DJANGO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: django-secret-key
                name: rbac-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_PROTOCOL
            valueFrom:
              secretKeyRef:
                key: principal-proxy-protocol
                name: rbac-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_HOST
            valueFrom:
              secretKeyRef:
                key: principal-proxy-host
                name: rbac-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_PORT
            valueFrom:
              secretKeyRef:
                key: principal-proxy-port
                name: rbac-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_PATH
            value: ''
          - name: PRINCIPAL_PROXY_USER_ENV
            valueFrom:
              secretKeyRef:
                key: principal-proxy-env
                name: rbac-secret
                optional: false
          - name: PRINCIPAL_PROXY_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: client-id
                name: insights-rbac
                optional: false
          - name: PRINCIPAL_PROXY_API_TOKEN
            valueFrom:
              secretKeyRef:
                key: token
                name: insights-rbac
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_SSL_VERIFY
            valueFrom:
              secretKeyRef:
                key: principal-proxy-ssl-verify
                name: rbac-secret
                optional: true
          - name: PRINCIPAL_PROXY_SERVICE_SOURCE_CERT
            valueFrom:
              secretKeyRef:
                key: principal-proxy-source-cert
                name: rbac-secret
                optional: true
          - name: POD_CPU_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: rbac-service
                resource: limits.cpu
          - name: ACCESS_CACHE_ENABLED
            value: ${ACCESS_CACHE_ENABLED}
          - name: APP_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: DJANGO_DEBUG
            value: ${DJANGO_DEBUG}
          - name: API_PATH_PREFIX
            value: ${API_PATH_PREFIX}
          - name: DEVELOPMENT
            value: ${DEVELOPMENT}
          - name: RBAC_LOG_LEVEL
            value: ${RBAC_LOG_LEVEL}
          - name: DJANGO_LOG_LEVEL
            value: ${DJANGO_LOG_LEVEL}
          - name: DJANGO_LOG_FORMATTER
            value: ${DJANGO_LOG_FORMATTER}
          - name: DJANGO_LOG_HANDLERS
            value: ${DJANGO_LOG_HANDLERS}
          - name: DJANGO_LOG_DIRECTORY
            value: ${DJANGO_LOG_DIRECTORY}
          - name: DJANGO_LOGGING_FILE
            value: ${DJANGO_LOGGING_FILE}
          - name: PERMISSION_SEEDING_ENABLED
            value: ${PERMISSION_SEEDING_ENABLED}
          - name: ROLE_SEEDING_ENABLED
            value: ${ROLE_SEEDING_ENABLED}
          - name: GROUP_SEEDING_ENABLED
            value: ${GROUP_SEEDING_ENABLED}
          - name: BYPASS_BOP_VERIFICATION
            value: ${BYPASS_BOP_VERIFICATION}
          - name: ROLE_CREATE_ALLOW_LIST
            value: ${ROLE_CREATE_ALLOW_LIST}
          - name: RBAC_DESTRUCTIVE_ENABLED_UNTIL
            value: ${RBAC_DESTRUCTIVE_ENABLED_UNTIL}
          - name: CLOWDER_ENABLED
            value: ${CLOWDER_ENABLED}
          - name: APP_NAMESPACE
            value: ${APP_NAMESPACE}
          - name: CW_NULL_WORKAROUND
            value: ${CW_NULL_WORKAROUND}
          - name: REDIS_MAX_CONNECTIONS
            value: ${REDIS_MAX_CONNECTIONS}
          - name: REDIS_SOCKET_CONNECT_TIMEOUT
            value: ${REDIS_SOCKET_CONNECT_TIMEOUT}
          - name: REDIS_SOCKET_TIMEOUT
            value: ${REDIS_SOCKET_TIMEOUT}
          - name: AUTHENTICATE_WITH_ORG_ID
            value: ${AUTHENTICATE_WITH_ORG_ID}
          - name: NOTIFICATIONS_ENABLED
            value: ${NOTIFICATIONS_ENABLED}
          - name: GUNICORN_WORKER_MULTIPLIER
            value: ${GUNICORN_WORKER_MULTIPLIER}
          - name: NOTIFICATIONS_TOPIC
            value: ${NOTIFICATIONS_TOPIC}
          - name: KAFKA_ENABLED
            value: ${KAFKA_ENABLED}
          - name: EXTERNAL_SYNC_TOPIC
            value: ${EXTERNAL_SYNC_TOPIC}
          - name: MIGRATE_AND_SEED_ON_INIT
            value: ${SERVICE_MIGRATE_AND_SEED_ON_INIT}
    jobs:
      - name: tenant-org-id-populator
        podSpec:
          image: quay.io/cloudservices/tenant-utils:latest
          command:
            - ./org-id-column-populator
            - -C
            - -a
            - account_id
            - -o
            - org_id
            - -t
            - api_tenant
            - --ean-translator-addr
            - http://${TENANT_TRANSLATOR_HOST}:${TENANT_TRANSLATOR_PORT}
            - --batch-size
            - "50"
          env:
            - name: LOG_FORMAT
              value: ${LOG_FORMAT}
            - name: LOG_BATCH_FREQUENCY
              value: '1'
          resources:
            limits:
              cpu: 300m
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 512Mi
      - name: cross-account-request-target-org-populator
        podSpec:
          image: quay.io/cloudservices/tenant-utils:latest
          command:
            - ./org-id-column-populator
            - -C
            - -a
            - target_account
            - -o
            - target_org
            - -t
            - api_crossaccountrequest
            - --ean-translator-addr
            - http://${TENANT_TRANSLATOR_HOST}:${TENANT_TRANSLATOR_PORT}
            - --batch-size
            - "50"
          env:
            - name: LOG_FORMAT
              value: ${LOG_FORMAT}
            - name: LOG_BATCH_FREQUENCY
              value: '1'
          resources:
            limits:
              cpu: 300m
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 512Mi
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: rbac-env
  data:
    api-path-prefix: /api/rbac
    app-config: /opt/rbac/rbac/gunicorn.py
    app-domain: ${APP_DOMAIN}
    app-home: /opt/rbac/rbac
    app-module: rbac.wsgi
    app-namespace: rbac-stage
    database-engine: postgresql
    database-name: rbac
    database-service-name: POSTGRES_SQL
    development: "False"
    django-debug: "False"
    django-log-directory: ""
    django-log-formatter: simple
    django-log-handlers: console
    django-log-level: INFO
    django-logging-file: ""
    postgres-sql-service-host: rbac-pgsql.rbac-stage.svc
    postgres-sql-service-port: "5432"
    rbac-log-level: INFO
- apiVersion: v1
  data:
    approval.json: |
      {
        "roles": [
          {
            "name": "Approval Administrator",
            "system": true,
            "version": 5,
            "description": "An approval administrator role that grants permissions to manage workflows, requests, actions, and templates.",
            "access": [
              {
                "permission": "approval:templates:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "approval:workflows:create",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "approval:workflows:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "approval:workflows:update",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "approval:workflows:delete",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "approval:workflows:link",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "approval:workflows:unlink",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "approval:requests:create",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "approval:requests:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  },
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "group"
                    }
                  }
                ]
              },
              {
                "permission": "approval:actions:create",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  },
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "group"
                    }
                  }
                ]
              },
              {
                "permission": "approval:actions:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "Approval User",
            "system": true,
            "version": 4,
            "description": "An approval user role which grants permissions to create/read/cancel a request, and read workflows.",
            "platform_default": true,
            "access": [
              {
                "permission": "approval:requests:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "user"
                    }
                  }
                ]
              },
              {
                "permission": "approval:requests:create",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "user"
                    }
                  }
                ]
              },
              {
                "permission": "approval:actions:create",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "user"
                    }
                  }
                ]
              },
              {
                "permission": "approval:actions:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "user"
                    }
                  }
                ]
              },
              {
                "permission": "approval:workflows:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "Approval Approver",
            "system": true,
            "version": 4,
            "description": "An approval approver role that grants permissions to read and approve requests.",
            "access": [
              {
                "permission": "approval:requests:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "group"
                    }
                  }
                ]
              },
              {
                "permission": "approval:actions:create",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "group"
                    }
                  }
                ]
              },
              {
                "permission": "approval:actions:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "group"
                    }
                  }
                ]
              }
            ]
          }
        ]
      }
    automation-analytics.json: |
      {
        "roles": [
          {
            "name": "Automation Analytics Administrator",
            "description": "An Automation Analytics Administrator role that grants ALL permissions.",
            "system": true,
            "platform_default": false,
            "version": 3,
            "access": [
              {
                "permission": "automation-analytics:*:*"
              }
            ]
          },
          {
            "name": "Automation Analytics Editor",
            "description": "An Automation Analytics Editor role that grants read-write permissions.",
            "system": true,
            "platform_default": true,
            "version": 4,
            "access": [
              {
                "permission": "automation-analytics:*:read"
              },
              {
                "permission": "automation-analytics:*:write"
              }
            ]
          },
          {
            "name": "Automation Analytics Viewer",
            "description": "An Automation Analytics Viewer role that grants read permissions.",
            "system": true,
            "platform_default": false,
            "version": 3,
            "access": [
              {
                "permission": "automation-analytics:*:read"
              }
            ]
          }
        ]
      }
    catalog.json: |
      {
        "roles": [
          {
            "name": "Catalog Administrator",
            "system": true,
            "version": 8,
            "description": "A catalog administrator roles grants create,read,update, delete and order permissions",
            "access": [
              {
                "permission": "catalog:portfolios:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:portfolios:create"
              },
              {
                "permission": "catalog:portfolios:update",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:portfolios:delete",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:portfolios:order",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:portfolio_items:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:portfolio_items:create",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:portfolio_items:update",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:portfolio_items:delete",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:portfolio_items:order",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:orders:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:orders:write",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:orders:order",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:order_items:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:order_items:write",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:order_items:order",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:progress_messages:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:progress_messages:write",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:approval_requests:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:approval_requests:write",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:tenants:update"
              },
              {
                "permission": "catalog:tenants:read"
              },
              {
                "permission": "catalog:order_processes:create",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:order_processes:delete",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:order_processes:link",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:order_processes:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:order_processes:unlink",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:order_processes:update",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "admin"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "Catalog User",
            "system": true,
            "version": 8,
            "description": "A catalog user roles grants read and order permissions",
            "platform_default": true,
            "access": [
              {
                "permission": "catalog:portfolios:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "group"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:portfolios:update",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "group"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:portfolios:order",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "group"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:portfolio_items:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "group"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:portfolio_items:update",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "group"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:portfolio_items:order",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "group"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:orders:write"
              },
              {
                "permission": "catalog:orders:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "user"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:orders:order"
              },
              {
                "permission": "catalog:order_items:write"
              },
              {
                "permission": "catalog:order_items:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "user"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:order_items:order"
              },
              {
                "permission": "catalog:progress_messages:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "user"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:approval_requests:read",
                "resourceDefinitions": [
                  {
                    "attributeFilter": {
                      "key": "scope",
                      "operation": "equal",
                      "value": "user"
                    }
                  }
                ]
              },
              {
                "permission": "catalog:tenants:read"
              }
            ]
          }
        ]
      }
    compliance.json: |
      {
        "roles": [
          {
            "name": "Compliance administrator",
            "description": "Perform any available operation against any Compliance resource.",
            "system": true,
            "platform_default": true,
            "version": 8,
            "access": [
              {
                "permission": "compliance:*:*"
              },
              {
                "permission": "inventory:*:read"
              }
            ]
          }
        ]
      }
    content-sources.json: |
      {
          "roles": [{
              "name": "Repositories administrator",
              "description": "Perform any available operation against any repositories resource.",
              "system": true,
              "platform_default": false,
              "admin_default": true,
              "version": 2,
              "access": [
                {
                  "permission": "content-sources:repositories:read"
                },
                {
                  "permission": "content-sources:repositories:write"
                }
              ]
          }, {
              "name": "Repositories viewer",
              "description": "Perform read only operations against repositories resources.",
              "system": true,
              "platform_default": true,
              "version": 2,
              "access": [
                {
                  "permission": "content-sources:repositories:read"
                }
              ]
              }
        ]
      }
    cost-management.json: |
      {
          "roles": [{
              "name": "Cost Administrator",
              "description": "A cost management administrator role that grants read and write permissions.",
              "system": true,
              "version": 2,
              "access": [{
                  "permission": "cost-management:*:*"
              }]
          }, {
              "name": "Cost Price List Administrator",
              "description": "A cost management role that grants read and write permissions on price list rates.",
              "system": true,
              "version": 2,
              "access": [{
                  "permission": "cost-management:rate:*"
              }]
          }, {
              "name": "Cost Price List Viewer",
              "description": "A cost management role that grants read permissions on price list rates.",
              "system": true,
              "version": 2,
              "access": [{
                  "permission": "cost-management:rate:read"
              }]
          }, {
              "name": "Cost Cloud Viewer",
              "description": "A cost management role that grants read permissions on cost reports related to cloud sources.",
              "system": true,
              "version": 4,
              "access": [{
                  "permission": "cost-management:aws.account:*"
              }, {
                  "permission": "cost-management:aws.organizational_unit:*"
              }, {
                  "permission": "cost-management:azure.subscription_guid:*"
              }]
          }, {
              "name": "Cost OpenShift Viewer",
              "description": "A cost management role that grants read permissions on cost reports related to OpenShift sources.",
              "system": true,
              "version": 2,
              "access": [{
                  "permission": "cost-management:openshift.cluster:*"
              }]
          }]
      }
    drift.json: |
      {
        "roles": [
          {
            "name": "Drift analysis administrator",
            "description": "Perform any available operation against any Drift Analysis resource.",
            "system": true,
            "platform_default": true,
            "version": 8,
            "access": [
              {
                "permission": "drift:*:*"
              },
              {
                "permission": "inventory:*:read"
              }
            ]
          }
        ]
      }
    insights.json: |
      {
        "roles": [
          {
            "name": "Insights administrator",
            "display_name": "Advisor administrator",
            "description": "Perform any available operation against any advisor resource.",
            "system": true,
            "platform_default": true,
            "version": 9,
            "access": [
              {
                "permission": "advisor:*:*"
              },
              {
                "permission": "inventory:*:read"
              }
            ]
          }
        ]
      }
    integrations.json: |
      {
        "roles": [
          {
            "name": "Integrations administrator",
            "description": "Perform any available operation against any Integrations resource.",
            "system": true,
            "platform_default": false,
            "version": 2,
            "access": [
              {
                "permission": "integrations:*:*"
              }
            ]
          }
        ]
      }
    inventory.json: |
      {
        "roles": [
          {
            "name": "Inventory administrator",
            "description": "Perform any available operation against any Inventory resource.",
            "system": true,
            "platform_default": true,
            "version": 2,
            "access": [
              {
                "permission": "inventory:*:*"
              }
            ]
          }
        ]
      }
    migration_analytics.json: |
      {
        "roles": [
          {
            "name": "Migration Analytics administrator",
            "description": "Perform any available operation against any Migration Analytics resource.",
            "system": true,
            "platform_default": true,
            "version": 2,
            "access": [
              {
                "permission": "migration-analytics:*:*"
              }
            ]
          }
        ]
      }
    notifications.json: |
      {
        "roles": [
          {
            "name": "Notifications administrator",
            "description": "Perform any available operation against Notifications and Integrations applications.",
            "system": true,
            "platform_default": true,
            "version": 3,
            "access": [
              {
                "permission": "notifications:*:*"
              },
              {
                "permission": "integrations:*:*"
              }
            ]
          },
          {
            "name": "Notifications viewer",
            "description": "Read only access to notifications and integrations applications.",
            "system": true,
            "platform_default": true,
            "version": 1,
            "access": [
              {
                "permission": "notifications:notifications:read"
              },
              {
                "permission": "integrations:endpoints:read"
              }
            ]
          }

        ]
      }
    malware-detection.json: |
      {
        "roles": [
          {
            "name": "Malware detection administrator",
            "display_name": "Malware detection administrator",
            "description": "Perform any available operation against any malware-detection resource.",
            "system": true,
            "version": 1,
            "access": [
              {
                "permission": "malware-detection:*:*"
              },
              {
                "permission": "inventory:*:read"
              }
            ]
          },
          {
            "name": "Malware detection viewer",
            "display_name": "Malware detection viewer",
            "description": "Read any malware-detection resource.",
            "system": true,
            "version": 1,
            "access": [
              {
                "permission": "malware-detection:*:read"
              },
              {
                "permission": "inventory:*:read"
              }
            ]
          }
        ]
      }
    patch.json: |
      {
        "roles": [
          {
            "name": "Patch administrator",
            "description": "Perform any available operation against any Patch resource.",
            "system": true,
            "platform_default": true,
            "version": 5,
            "access": [
              {
                "permission": "patch:*:*"
              },
              {
                "permission": "inventory:*:read"
              },
              {
                "permission": "remediations:*:read"
              },
              {
                "permission": "remediations:*:write"
           }
           ]
          },
          {
            "name": "Patch viewer",
            "description": "Read any Patch resource.",
            "system": true,
            "platform_default": true,
            "admin_default": false,
            "version": 3,
            "access": [
              {
                "permission": "patch:*:read"
              },
              {
                "permission": "inventory:*:read"
              }
            ]
          }
        ]
      }
    rbac.json: |
      {
        "roles": [
          {
            "name": "User Access administrator",
            "display_name": "User Access administrator",
            "description": "Grants a non-org admin full access to configure and manage user access to services hosted on console.redhat.com. This role can only be viewed and assigned by Organization Administrators.",
            "system": true,
            "platform_default": false,
            "version": 2,
            "access": [
              {
                "permission": "rbac:*:*"
              }
            ]
          },
          {
            "name": "User Access principal viewer",
            "display_name": "User Access principal viewer",
            "description": "Grants a non-org admin read access to principals within user access.",
            "system": true,
            "platform_default": false,
            "version": 1,
            "access": [
              {
                "permission": "rbac:principal:read"
              }
            ]
          }
        ]
      }
    ros.json: |
      {
        "roles": [
          {
            "name": "Resource Optimization administrator",
            "description": "Perform any available operation against any Resource Optimization resource.",
            "system": true,
            "platform_default": true,
            "version": 1,
            "access": [
              {
                "permission": "ros:*:*"
              },
              {
                "permission": "inventory:*:read"
              }
            ]
          },
          {
            "name": "Resource Optimization user",
            "description": "A Resource Optimization user role that grants read only permission.",
            "system": true,
            "platform_default": true,
            "version": 1,
            "access": [
              {
                "permission": "ros:*:read"
              },
              {
                "permission": "inventory:*:read"
              }
            ]
          }
        ]
      }

    policies.json: |
      {
        "roles": [
          {
            "name": "Policies administrator",
            "description": "Perform any available operation against any Policies resource.",
            "system": true,
            "platform_default": true,
            "version": 5,
            "access": [
              {
                "permission": "policies:*:*"
              },
              {
                "permission": "inventory:*:read"
              }
            ]
          }
        ]
      }
    remediations.json: |
      {
        "roles": [
          {
            "name": "Remediations administrator",
            "description": "Perform any available operation against any Remediations resource",
            "system": true,
            "platform_default": false,
            "version": 4,
            "access": [
              {
                "permission": "remediations:*:*"
              },
              {
                "permission": "inventory:*:read"
              }
            ]
          },
          {
            "name": "Remediations user",
            "description": "Perform create, view, update, delete operations against any Remediations resource.",
            "system": true,
            "platform_default": true,
            "version": 4,
            "access": [
              {
                "permission": "remediations:remediation:read"
              },
              {
                "permission": "remediations:remediation:write"
              }
            ]
          }
        ]
      }
    sources.json: |
      {
        "roles": [
          {
            "name": "Sources administrator",
            "description": "Perform any available operation against any Source",
            "system": true,
            "platform_default": true,
            "version": 3,
            "access": [
              {
                "permission": "sources:*:*"
              }
            ]
          }
        ]
      }
    subscriptions.json: |
      {
        "roles": [
          {
            "name": "Subscription Watch administrator",
            "description": "Perform any available operation against any Subscription Watch resource.",
            "system": true,
            "platform_default": true,
            "version": 4,
            "access": [
              {
                "permission": "subscriptions:*:*"
              },
              {
                "permission": "inventory:*:read"
              }
            ]
          }
        ]
      }
    vulnerability.json: |
      {
        "roles": [
          {
            "name": "Vulnerability administrator",
            "description": "Perform any available operation against any Vulnerability resource.",
            "system": true,
            "platform_default": true,
            "version": 8,
            "access": [
              {
                "permission": "vulnerability:*:*"
              },
              {
                "permission": "inventory:*:read"
              }
            ]
          }
        ]
      }
  kind: ConfigMap
  metadata:
    name: rbac-config
- apiVersion: v1
  data:
    advisor.json: |
      {
          "*": ["*"],
          "disable-recommendations": ["write"],
          "weekly-email": ["read"],
          "recommendation-results": ["read"],
          "exports": ["read"]
      }
    approval.json: |
      {
          "actions": ["create", "read"],
          "requests": ["create", "read"],
          "templates": ["read"],
          "workflows": ["create", "read", "update", "delete", "link", "unlink"]
      }
    automation-analytics.json: |
      {
          "*": ["read", "write", "*"]
      }
    catalog.json: |
      {
          "approval_requests": ["read", "write"],
          "orders": ["read", "write", "order"],
          "order_items": ["read", "write", "order"],
          "order_processes": ["create", "read", "link", "unlink", "update", "delete"],
          "portfolios": ["create", "read", "update", "delete", "order"],
          "portfolio_items": ["create", "read", "update", "delete", "order"],
          "progress_messages": ["read", "write"],
          "tenants": ["read", "update"]
      }
    compliance.json: |
      {
          "*": ["*"]
      }
    cost-management.json: |
      {
          "aws.account": ["*"],
          "azure.subscription_guid": ["*"],
          "openshift.cluster": ["*"],
          "rate": ["read", "*"],
          "*": ["*"],
          "aws.organizational_unit": ["*"]
      }
    drift.json: |
      {
          "*": ["*"],
          "comparisons": ["read"],
          "baselines": ["read", "write"]
      }
    integrations.json: |
      {
          "*": ["*"],
          "endpoints": ["read","write"]
      }
    inventory.json: |
      {
          "*": ["read", "*"],
          "hosts": ["read", "write", "*"]
      }
    migration-analytics.json: |
      {
          "*": ["*"]
      }
    notifications.json: |
      {
          "*": ["*"],
          "notifications": ["read","write"]
      }
    patch.json: |
      {
          "*": ["*"]
      }
    policies.json: |
      {
          "policies": ["read","write"],
          "*": ["*"]
      }
    remediations.json: |
      {
          "remediation": ["read", "write", "execute"],
          "*": ["*"]
      }
    ros.json: |
      {
          "*": ["read", "*"]
      }
    sources.json: |
      {
          "*": ["*"]
      }
    subscriptions.json: |
      {
          "*": ["*"]
      }
    vulnerability.json: |
      {
          "*": ["read", "write", "*"],
          "vulnerability_results": ["read"],
          "cve.business_risk_and_status": ["write"],
          "system.cve.status": ["write"],
          "advanced_report": ["read"],
          "report_and_export": ["read"],
          "system.opt_out": ["write", "read"]
      }
  kind: ConfigMap
  metadata:
    name: model-access-permissions
- apiVersion: v1
  kind: Secret
  metadata:
    name: rbac-psks
  data:
    psks.json: >-
      ewogICJhZHZpc29yIjogewogICAgImFsdC1zZWNyZXQiOiAiMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTEiCiAgfSwKICAiYXBwcm92YWwiOiB7CiAgICAiYWx0LXNlY3JldCI6ICIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMiIKICB9Cn0=
  type: Opaque
- apiVersion: v1
  kind: Secret
  metadata:
    name: insights-rbac
  data:
    client-id: aW5zaWdodHMtcmJhYw==
    token: MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMg==
  type: Opaque
- apiVersion: v1
  kind: Secret
  metadata:
    name: rbac-secret
  data:
    django-secret-key: MTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTE=
    principal-proxy-api-token: >-
      MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMg==
    principal-proxy-client-id: aW5zaWdodHMtcmJhYw==
    principal-proxy-env: c3RhZ2U=
    principal-proxy-host: bWJvcA==
    principal-proxy-port: ODA5MA==
    principal-proxy-protocol: aHR0cA==
    principal-proxy-source-cert: RmFsc2U=
    principal-proxy-ssl-verify: RmFsc2U=
    sentry-dsn: ''
  type: Opaque
- apiVersion: v1
  kind: Service
  metadata:
    name: rbac
    labels:
      app: rbac
      pod: rbac-service
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8000
      name: weblegacy
    selector:
      pod: rbac-service

parameters:
- description: Image name
  name: IMAGE
  value: quay.io/cloudservices/rbac
- description: Determines Clowder deployment
  name: CLOWDER_ENABLED
  value: "true"
- description: ClowdEnv Name
  name: ENV_NAME
  required: true
- description: Initial amount of memory the Django container will request.
  displayName: Memory Request
  name: MEMORY_REQUEST
  value: 512Mi
- description: Maximum amount of memory the Django container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  value: 1Gi
- description: Initial amount of cpu the Django container will request.
  displayName: CPU Request
  name: CPU_REQUEST
  value: 200m
- description: Maximum amount of cpu the Django container can use.
  displayName: CPU Limit
  name: CPU_LIMIT
  value: 700m
- displayName: RBAC PSKs
  name: RBAC_PSKS
  value: rbac-psks
- displayName: Service Dependency Name
  name: SERVICE_DEPENDENCY_NAME
  value: rbac-pgsql
- displayName: API Prefix Path
  name: API_PATH_PREFIX
  value: /api/rbac
- displayName: Development
  name: DEVELOPMENT
  value: 'false'
- displayName: Rbac log level
  name: RBAC_LOG_LEVEL
  value: INFO
- displayName: Django log level
  name: DJANGO_LOG_LEVEL
  value: INFO
- displayName: Django log formatter
  name: DJANGO_LOG_FORMATTER
  value: simple
- displayName: Django log handlers
  name: DJANGO_LOG_HANDLERS
  value: console,ecs
- displayName: Django log directory
  name: DJANGO_LOG_DIRECTORY
- displayName: Django logging file
  name: DJANGO_LOGGING_FILE
- description: Name of the rbac-config config map
  name: CONFIG_MAP_NAME
  value: rbac-config
- description: Name of the predefined access permissions config map
  name: MODEL_ACCESS_PERMISSIONS
  value: model-access-permissions
- description: minimum number of pods to use when autoscaling is enabled
  name: MIN_REPLICAS
  value: '1'
- description: maximum number of pods to use when autoscaling is enabled
  name: MAX_REPLICAS
  value: '1'
- description: minimum number of pods to use when autoscaling is enabled for worker service
  name: MIN_WORKER_REPLICAS
  value: '1'
- description: minimum number of pods to use when autoscaling is enabled for scheduler service
  name: MIN_SCHEDULER_REPLICAS
  value: '1'
- description: target CPU utilization for the service
  name: TARGET_CPU_UTILIZATION
  value: '90'
- description: 'Options can be found in the doc: https://www.postgresql.org/docs/current/libpq-ssl.html#LIBPQ-SSL-SSLMODE-STATEMENTS'
  displayName: Postgres SSL mode
  name: PGSSLMODE
  value: prefer
- description: Python boolean value to enable/disable permission seeding on app boot
  name: PERMISSION_SEEDING_ENABLED
  required: true
- description: Python boolean value to enable/disable role seeding on app boot
  name: ROLE_SEEDING_ENABLED
  required: true
- description: Python boolean value to enable/disable group seeding on app boot
  name: GROUP_SEEDING_ENABLED
  required: true
- description: Enable the RBAC access cache
  name: ACCESS_CACHE_ENABLED
  value: 'True'
- description: Bypass interaction with the BOP service
  name: BYPASS_BOP_VERIFICATION
  value: 'False'
- description: Application allow list for role creation in RBAC
  name: ROLE_CREATE_ALLOW_LIST
  value: cost-management,remediations,inventory,drift,policies,advisor,catalog,approval,vulnerability,compliance,automation-analytics,notifications,patch,integrations,ros
- description: Timestamp expiration allowance on destructive actions through the internal
    RBAC API
  name: RBAC_DESTRUCTIVE_ENABLED_UNTIL
  value: ''
- description: Image tag
  name: IMAGE_TAG
  required: true
- description: Name of DB secret
  name: DB_SECRET_NAME
  value: rbac-db
- description: The name assigned to all frontend objects defined in this template.
  displayName: Name
  name: NAME
  value: rbac
- description: Initial amount of CPU the Flower container will request.
  displayName: Celery scheduler CPU Resource Request
  name: CELERY_SCHEDULER_CPU_REQUEST
  value: 100m
- description: Maximum amount of CPU the scheduler container can use.
  displayName: CPU Limit
  name: CELERY_SCHEDULER_CPU_LIMIT
  value: 300m
- description: Initial amount of memory the scheduler container will request.
  displayName: Celery scheduler Memory Resource Request
  name: CELERY_SCHEDULER_MEMORY_REQUEST
  value: 256Mi
- description: Maximum amount of memory the scheduler container can use.
  displayName: Memory Limit
  name: CELERY_SCHEDULER_MEMORY_LIMIT
  value: 512Mi
- description: Initial amount of CPU the worker container will request.
  displayName: Celery worker CPU Resource Request
  name: CELERY_WORKER_CPU_REQUEST
  value: 100m
- description: Maximum amount of CPU the worker container can use.
  displayName: CPU Limit
  name: CELERY_WORKER_CPU_LIMIT
  value: 300m
- description: Initial amount of memory the worker container will request.
  displayName: Celery worker Memory Resource Request
  name: CELERY_WORKER_MEMORY_REQUEST
  value: 256Mi
- description: Maximum amount of memory the worker container can use.
  displayName: Memory Limit
  name: CELERY_WORKER_MEMORY_LIMIT
  value: 512Mi
- displayName: Django Debug
  name: DJANGO_DEBUG
  value: 'False'
- displayName: Django log level
  name: DJANGO_LOG_LEVEL
  value: INFO
- description: 'Options can be found in the doc: https://www.postgresql.org/docs/current/libpq-ssl.html#LIBPQ-SSL-SSLMODE-STATEMENTS'
  displayName: Postgres SSL mode
  name: PGSSLMODE
  value: prefer
- description: Name of the rbac-config config map
  name: CONFIG_MAP_NAME
  value: rbac-config
- description: Name of the predefined access permissions config map
  name: MODEL_ACCESS_PERMISSIONS
  value: model-access-permissions
- description: Name of DB secret
  name: DB_SECRET_NAME
  value: rbac-db
- name: APP_NAMESPACE
  value: 'rbac'
- name: CW_NULL_WORKAROUND
  value: 'true'
- name: CELERY_INITIAL_DELAY_SEC
  value: "30"
- name: CELERY_PERIOD_SEC
  value: "300"
- description: Default number of threads to use for seeding
  name: MAX_SEED_THREADS
  value: "2"
- description: max_connections for redis client
  name: REDIS_MAX_CONNECTIONS
  value: "10"
- description: socket connect timeout for redis
  name: REDIS_SOCKET_CONNECT_TIMEOUT
  value: "0.1"
- description: socket timeout for redis
  name: REDIS_SOCKET_TIMEOUT
  value: "0.1"
- description: Enable sending out notification events
  name: NOTIFICATIONS_ENABLED
  value: 'False'
- description: Enable sending out notification events of Red Hat changes
  name: NOTIFICATIONS_RH_ENABLED
  value: 'False'
- description: Enable RBAC tenancy using Org ID
  name: AUTHENTICATE_WITH_ORG_ID
  value: 'True'
- name: TENANT_TRANSLATOR_HOST
  required: true
- name: TENANT_TRANSLATOR_PORT
  value: '8892'
- name: GUNICORN_WORKER_MULTIPLIER
  value: '2'
- name: NOTIFICATIONS_TOPIC
  value: 'platform.notifications.ingress'
- description: Enable kafka
  name: KAFKA_ENABLED
  value: 'False'
- name: EXTERNAL_SYNC_TOPIC
  value: 'platform.rbac.sync'
- name: SERVICE_MIGRATE_AND_SEED_ON_INIT
  value: 'True'
- name: WORKER_MIGRATE_AND_SEED_ON_INIT
  value: 'False'
