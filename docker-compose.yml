version: '3'

services:
  rbac-server:
      build:
          context: .
          dockerfile: Dockerfile-env
      working_dir: /rbac
      entrypoint:
        - /rbac/run_server.sh
      environment:
        - DATABASE_SERVICE_NAME=POSTGRES_SQL
        - DATABASE_ENGINE=postgresql
        - DATABASE_NAME=postgres
        - POSTGRES_SQL_SERVICE_HOST=db
        - POSTGRES_SQL_SERVICE_PORT=5432
        - DATABASE_USER=postgres
        - DATABASE_PASSWORD=postgres
        - DJANGO_LOG_HANDLERS=console,ecs
        - DJANGO_READ_DOT_ENV_FILE=True
        - DEVELOPMENT=${DEVELOPMENT-False}
        - DJANGO_DEBUG=${DJANGO_DEBUG-True}
      privileged: true
      ports:
          - 9080:8000
      volumes:
        - '.:/rbac/'
      links:
        - db
      depends_on:
        - db

  rbac-worker:
      container_name: rbac_worker
      build:
          context: .
          dockerfile: Dockerfile-env
      working_dir: /rbac
      entrypoint: ['celery', 'worker', '-A', 'rbac.celery', '--broker=redis://redis:6379/0', '--loglevel=INFO']
      privileged: true
      links:
          - redis
      depends_on:
          - redis

  rbac-scheduler:
      container_name: rbac_scheduler
      build:
          context: .
          dockerfile: Dockerfile-env
      working_dir: /rbac
      entrypoint: ['celery', 'beat', '-A', 'rbac.celery', '--broker=redis://redis:6379/0', '--loglevel=INFO']
      privileged: true
      links:
          - redis
      depends_on:
          - redis

  redis:
    container_name: rbac_redis
    image: redis:5.0.4
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  db:
    image: postgres:10.17
    environment:
    - POSTGRES_DB=postgres
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres
    ports:
      - "15432:5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data
networks:
  default:
    external:
      name: rbac-network
