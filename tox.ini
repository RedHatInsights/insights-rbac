[tox]
envlist = lint, py39, mypy
skipsdist = True

[flake8]
; D106 = Missing docstring in public nested class (warning form flake8-docstrings https://www.pydocstyle.org/en/stable/error_codes.html)
; W503 = Line break before binary operator (https://www.flake8rules.com/rules/W503.html)
; C901 = Function is too complex (https://www.flake8rules.com/rules/C901.html)
ignore = D106,W503,C901
inline-quotes = "
max-complexity = 10
max-line-length = 120
exclude =
  **/migrations/*.py
  **/manage.py
  **/settings.py
import-order-style = pycharm
application-import-names = rbac, api

[testenv]
;passenv = CI TRAVIS TRAVIS_*
setenv =
  LOG_TEST_OUTPUT={env:LOG_TEST_OUTPUT:False}
  LOG_DATABASE_QUERIES={env:LOG_DATABASE_QUERIES:False}
  DATABASE_NAME={env:DATABASE_NAME:postgres}
  DATABASE_HOST={env:DATABASE_HOST:localhost}
  DATABASE_PORT={env:DATABASE_PORT:15432}
  DATABASE_USER={env:DATABASE_USER:postgres}
  DATABASE_PASSWORD={env:DATABASE_PASSWORD:postgres}
  PGPASSWORD={env:PGPASSWORD:postgres}
  TESTING_APPLICATION=app
  ROLE_CREATE_ALLOW_LIST=cost-management
  V2_MIGRATION_APP_EXCLUDE_LIST=approval
  NOTIFICATIONS_TOPIC=platform.notifications.ingress
  EXTERNAL_SYNC_TOPIC=platform.rbac.sync
  EXTERNAL_CHROME_TOPIC=platform.chrome
  MOCK_KAFKA=True
  KAFKA_ENABLED=True
  API_PATH_PREFIX=/api/rbac
deps =
  faker
  coverage
  pipenv
commands =
  pipenv install
  coverage run {toxinidir}/rbac/manage.py test --failfast -v 2 {posargs: tests/}
  coverage report --show-missing

[testenv:lint]
deps =
  flake8
  flake8-docstrings
  flake8-import-order
  flake8-quotes
  black==25.1.0
setenv =
  PYTHONPATH={toxinidir}
commands =
  flake8 rbac
  black --check -t py39 -l 119 rbac tests --diff

[testenv:mypy]
deps =
  mypy
commands =
  mypy --install-types --non-interactive rbac
