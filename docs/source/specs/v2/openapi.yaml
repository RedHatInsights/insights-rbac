openapi: 3.0.0
info:
  title: Role Based Access Control for Kessel Project
  version: v2
tags:
  - name: Workspaces
  - name: Roles
paths:
  /roles/:
    get:
      operationId: Roles_list
      summary: List roles
      description: List roles visible to the caller's tenant
      parameters:
        - name: X-Consistency-Zookie
          in: header
          required: false
          description: Consistency token (zookie). If omitted, service may use an org-level token.
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int64
            default: 20
          explode: false
        - name: cursor
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: filter_name
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: filter_type
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Roles.RoleType'
          explode: false
        - name: filter_scope
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Roles.RoleScope'
          explode: false
        - name: filter_application
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: filter_action
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: include
          in: query
          required: false
          description: 'Optional expansions: stats,parent,children (comma-separated)'
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Roles.RoleListResponse'
              example:
                meta:
                  limit: 20
                links:
                  next: /api/rbac/v2/roles/?limit=20&cursor=abc
                  previous: null
                data:
                  - id: 9b4ef5f9-8d26-4b61-8c9f-8ab5d9e9c001
                    name: Workspace Admin
                    display_name: Workspace Admin
                    type: seeded
                    scope: default_workspace
                    stats:
                      permissions_count: 12
                      workspace_count: 3
                      group_count: 2
        '401':
          description: Access is unauthorized.
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 401
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
        '403':
          description: Access is forbidden.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problems.Problem403'
        '500':
          description: Server error
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 500
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
      tags:
        - Roles
  /roles/{role_id}/:
    get:
      operationId: Roles_read
      summary: Read role
      description: Get a single role
      parameters:
        - name: X-Consistency-Zookie
          in: header
          required: false
          schema:
            type: string
        - name: role_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
        - name: include
          in: query
          required: false
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Roles.Role'
              example:
                data:
                  id: 9b4ef5f9-8d26-4b61-8c9f-8ab5d9e9c001
                  name: Workspace Admin
                  display_name: Workspace Admin
                  type: seeded
                  scope: default_workspace
                  created_at: '2024-06-01T00:00:00Z'
                  updated_at: '2024-08-04T12:00:00Z'
                  stats:
                    permissions_count: 12
        '401':
          description: Access is unauthorized.
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 401
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
        '403':
          description: Access is forbidden.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problems.Problem403'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problems.Problem404'
        '500':
          description: Server error
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 500
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
      tags:
        - Roles
  /roles/{role_id}/permissions/:
    get:
      operationId: Roles_listPermissions
      summary: List role permissions
      description: List permissions that belong to a role
      parameters:
        - name: X-Consistency-Zookie
          in: header
          required: false
          schema:
            type: string
        - name: role_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int64
            default: 50
          explode: false
        - name: cursor
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: filter_application
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: filter_resource
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: filter_action
          in: query
          required: false
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Roles.PermissionListResponse'
              example:
                meta:
                  limit: 50
                links:
                  next: /api/rbac/v2/roles/9b4ef5f9-8d26-4b61-8c9f-8ab5d9e9c001/permissions/?limit=50&cursor=def
                  previous: null
                data:
                  - id: f3db6c15-45ad-4f57-bbbf-4b1e2bd4c0a1
                    application: inventory
                    resource: host
                    action: read
                    name: inventory:host:read
                    description: Read host metadata
        '401':
          description: Access is unauthorized.
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 401
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
        '403':
          description: Access is forbidden.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problems.Problem403'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problems.Problem404'
        '500':
          description: Server error
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 500
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
      tags:
        - Roles
  /workspaces/:
    get:
      operationId: Workspaces_list
      summary: List workspaces in a tenant
      description: List workspaces in a tenant
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int64
            default: 10
          explode: false
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int64
            default: 0
          explode: false
        - name: type
          in: query
          required: false
          description: Defaults to all when param is not supplied.
          schema:
            $ref: '#/components/schemas/Workspaces.WorkspaceTypesQueryParam'
            default: all
          explode: false
        - name: name
          in: query
          required: false
          description: Case sensitive exact match of workspace by name.
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspaces.WorkspaceListResponse'
              example:
                meta:
                  count: 1
                  limit: 10
                  offset: 0
                links:
                  first: /api/rbac/v2/workspaces/?limit=10&offset=0
                  next: /api/rbac/v2/workspaces/?limit=10&offset=10
                  previous: null
                  last: /api/rbac/v2/workspaces/?limit=10&offset=20
                data:
                  - id: e4277742-b91c-43f1-a185-b827e8574345
                    parent_id: c1f729e2-3e2b-4f9e-b247-a4b568393e11
                    type: standard
                    name: My first workspace
                    description: This is a basic workspace.
                    created: 2024-05-06T12:20-12-0700
                    modified: 2024-05-06T12:20-12-0700
        '401':
          description: Access is unauthorized.
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 401
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
        '403':
          description: Access is forbidden.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problems.Problem403'
        '500':
          description: Server error
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 500
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
      tags:
        - Workspaces
    post:
      operationId: Workspaces_create
      summary: Create workspace in tenant
      description: Create workspace in tenant
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspaces.CreateWorkspaceResponse'
              example:
                _: 201
                id: e4277742-b91c-43f1-a185-b827e8574345
                parent_id: c1f729e2-3e2b-4f9e-b247-a4b568393e11
                type: standard
                name: Alpha Workspace
                description: Create a standard workspace.
                created: '2024-08-04T12:00:00Z'
                modified: '2024-08-04T12:00:00Z'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problems.Problem400'
        '401':
          description: Access is unauthorized.
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 401
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
        '403':
          description: Access is forbidden.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problems.Problem403'
        '500':
          description: Server error
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 500
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
      tags:
        - Workspaces
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspaces.CreateWorkspaceRequest'
            example:
              name: Alpha Workspace
              description: Create a standard workspace.
  /workspaces/{id}/:
    get:
      operationId: Workspaces_read
      summary: Get a workspace in tenant
      description: Get a workspace in tenant
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identification
          schema:
            $ref: '#/components/schemas/UUID'
        - name: include_ancestry
          in: query
          required: false
          description: When true, the response will include the ancestry of the workspace.
          schema:
            type: boolean
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/Workspaces.ReadWorkspaceResponse'
                  - $ref: '#/components/schemas/Workspaces.ReadWorkspaceWithAncestryResponse'
        '401':
          description: Access is unauthorized.
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 401
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
        '403':
          description: Access is forbidden.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problems.Problem403'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problems.Problem404'
        '500':
          description: Server error
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 500
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
      tags:
        - Workspaces
    put:
      operationId: Workspaces_update
      summary: Edit the workspace name or description
      description: Edit a workspace
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identification
          schema:
            $ref: '#/components/schemas/UUID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspaces.UpdateWorkspaceResponse'
              example:
                _: 200
                id: e4277742-b91c-43f1-a185-b827e8574345
                parent_id: c1f729e2-3e2b-4f9e-b247-a4b568393e11
                type: standard
                name: Alpha Workspace
                description: Changing description of alpha workspace to something new.
                created: '2024-08-04T12:00:00Z'
                modified: '2024-08-04T12:00:00Z'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 400
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
        '401':
          description: Access is unauthorized.
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 401
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
        '403':
          description: Access is forbidden.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problems.Problem403'
        '500':
          description: Server error
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 500
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
      tags:
        - Workspaces
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspaces.UpdateWorkspaceRequest'
            example:
              parent_id: c1f729e2-3e2b-4f9e-b247-a4b568393e11
              name: Alpha Workspace
              description: Changing description of alpha workspace to something new.
    patch:
      operationId: Workspaces_patch
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identification
          schema:
            $ref: '#/components/schemas/UUID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspaces.PatchWorkspaceResponse'
              example:
                _: 200
                id: e4277742-b91c-43f1-a185-b827e8574345
                parent_id: c1f729e2-3e2b-4f9e-b247-a4b568393e11
                type: standard
                name: Alpha Workspace - closed
                description: Create a standard workspace.
                created: '2024-08-04T12:00:00Z'
                modified: '2024-08-04T12:00:00Z'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 400
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
        '401':
          description: Access is unauthorized.
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 401
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
        '403':
          description: Access is forbidden.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problems.Problem403'
        '500':
          description: Server error
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 500
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
      tags:
        - Workspaces
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspaces.PatchWorkspaceRequest'
            example:
              name: Alpha Workspace - closed
              description: Create a standard workspace.
    delete:
      operationId: Workspaces_delete
      summary: Delete the workspace
      description: Delete a workspace
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identification
          schema:
            $ref: '#/components/schemas/UUID'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problems.Workspace.Problem400WorkspaceNotEmpty'
        '401':
          description: Access is unauthorized.
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 401
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
        '403':
          description: Access is forbidden.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problems.Problem403'
        '500':
          description: Server error
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 500
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
      tags:
        - Workspaces
  /workspaces/{id}/move/:
    post:
      operationId: Workspaces_move
      summary: Move a workspace to a new parent.
      description: Move a workspace to a new parent.
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identification of the workspace to move
          schema:
            $ref: '#/components/schemas/UUID'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspaces.MoveWorkspaceResponse'
              example:
                id: e4277742-b91c-43f1-a185-b827e8574345
                parent_id: f0e1d2c3-b4a5-4678-9a1b-c2d3e4f5a6b7
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problems.Problem400'
        '401':
          description: Access is unauthorized.
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 401
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
        '403':
          description: Access is forbidden.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problems.Problem403'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problems.Problem404'
        '500':
          description: Server error
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    $ref: '#/components/schemas/Problems.ProblemType'
                  status:
                    type: number
                    enum:
                      - 500
                  title:
                    type: string
                  detail:
                    type: string
                  instance:
                    type: string
                    format: uri
      tags:
        - Workspaces
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspaces.MoveWorkspaceRequest'
            example:
              parent_id: c1f729e2-3e2b-4f9e-b247-a4b568393e11
components:
  schemas:
    Problems.Problem400:
      type: object
      required:
        - title
        - detail
      properties:
        title:
          type: string
          enum:
            - The request payload contains invalid syntax.
        detail:
          type: string
          example: 'JSON parse error - Expecting value: line 1 column 1 (char 0)'
      allOf:
        - type: object
          properties:
            type:
              $ref: '#/components/schemas/Problems.ProblemType'
            status:
              type: number
              enum:
                - 400
            title:
              type: string
            detail:
              type: string
            instance:
              type: string
              format: uri
    Problems.Problem403:
      type: object
      required:
        - type
        - title
      properties:
        type:
          type: string
          enum:
            - http://project-kessel.org/problems/insufficient-permission
        title:
          type: string
          enum:
            - You do not have permission to perform this action.
      allOf:
        - type: object
          properties:
            type:
              $ref: '#/components/schemas/Problems.ProblemType'
            status:
              type: number
              enum:
                - 403
            title:
              type: string
            detail:
              type: string
            instance:
              type: string
              format: uri
    Problems.Problem404:
      type: object
      required:
        - title
        - detail
      properties:
        title:
          type: string
          enum:
            - Resource was not found
        detail:
          type: string
          example: Not found
      allOf:
        - type: object
          properties:
            type:
              $ref: '#/components/schemas/Problems.ProblemType'
            status:
              type: number
              enum:
                - 404
            title:
              type: string
            detail:
              type: string
            instance:
              type: string
              format: uri
    Problems.ProblemType:
      type: string
      enum:
        - http://project-kessel.org/problems/insufficient-permission
    Problems.Workspace.Problem400WorkspaceNotEmpty:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          enum:
            - Unable to delete due to workspace dependencies
      allOf:
        - type: object
          properties:
            type:
              $ref: '#/components/schemas/Problems.ProblemType'
            status:
              type: number
              enum:
                - 400
            title:
              type: string
            detail:
              type: string
            instance:
              type: string
              format: uri
    Roles.Pagination:
      type: object
      required:
        - meta
        - links
      properties:
        meta:
          $ref: '#/components/schemas/Workspaces.CursorPaginationMeta'
        links:
          $ref: '#/components/schemas/Workspaces.CursorPaginationLinks'
      description: Lightweight pagination envelope (reuses shared cursor models)
    Roles.Permission:
      type: object
      required:
        - id
        - application
        - resource
        - action
        - name
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        application:
          type: string
        resource:
          type: string
        action:
          type: string
        name:
          type: string
          description: <application>:<resource>:<action>
        description:
          type: string
      example:
        id: f3db6c15-45ad-4f57-bbbf-4b1e2bd4c0a1
        application: inventory
        resource: host
        action: read
        name: inventory:host:read
        description: Read host metadata
    Roles.PermissionListResponse:
      type: object
      required:
        - meta
        - links
        - data
      properties:
        meta:
          $ref: '#/components/schemas/Workspaces.CursorPaginationMeta'
        links:
          $ref: '#/components/schemas/Workspaces.CursorPaginationLinks'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Roles.Permission'
    Roles.Role:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/Roles.RoleBody'
      example:
        data:
          id: 9b4ef5f9-8d26-4b61-8c9f-8ab5d9e9c001
          name: Workspace Admin
          display_name: Workspace Admin
          description: Administrative permissions scoped to a workspace.
          type: seeded
          scope: default_workspace
          updated_at: '2024-08-04T12:00:00Z'
          created_at: '2024-06-01T00:00:00Z'
          parent:
            id: 11111111-2222-3333-4444-555555555555
            name: Parent Role
          children:
            - id: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
              name: Child Role
    Roles.RoleBody:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          description: Creation time
        parent:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/UUID'
            name:
              type: string
          required:
            - id
          description: Optional parent link when the role is derived
        children:
          type: array
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/UUID'
              name:
                type: string
            required:
              - id
          description: Optional direct children
      allOf:
        - $ref: '#/components/schemas/Roles.RoleSummary'
    Roles.RoleListResponse:
      type: object
      required:
        - meta
        - links
        - data
      properties:
        meta:
          $ref: '#/components/schemas/Workspaces.CursorPaginationMeta'
        links:
          $ref: '#/components/schemas/Workspaces.CursorPaginationLinks'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Roles.RoleSummary'
    Roles.RoleScope:
      type: string
      enum:
        - organization
        - root_workspace
        - default_workspace
        - none
    Roles.RoleSummary:
      type: object
      required:
        - id
        - name
        - type
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        name:
          type: string
        display_name:
          type: string
        description:
          type: string
        type:
          $ref: '#/components/schemas/Roles.RoleType'
        scope:
          allOf:
            - $ref: '#/components/schemas/Roles.RoleScope'
          description: High-level applicability; not a resource binding
          default: none
        updated_at:
          type: string
          format: date-time
        stats:
          type: object
          properties:
            permissions_count:
              type: integer
              format: int64
            workspace_count:
              type: integer
              format: int64
            group_count:
              type: integer
              format: int64
          description: Optional, only when requested via include=stats
      example:
        id: 9b4ef5f9-8d26-4b61-8c9f-8ab5d9e9c001
        name: Workspace Admin
        display_name: Workspace Admin
        description: Administrative permissions scoped to a workspace.
        type: seeded
        scope: default_workspace
        updated_at: '2024-08-04T12:00:00Z'
    Roles.RoleType:
      type: string
      enum:
        - platform
        - seeded
        - custom
    Timestamps:
      type: object
      required:
        - created
        - modified
      properties:
        created:
          type: string
          format: date-time
          description: '2019-01-21T17:32:28Z'
        modified:
          type: string
          format: date-time
          description: '2019-01-21T17:32:28Z'
    UUID:
      type: string
      format: uuid
    Versions:
      type: string
      enum:
        - v2
    Workspaces.BasicWorkspace:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Workspace A
          default: Workspace A
        description:
          type: string
          description: Description of Workspace A
          default: Description of Workspace A
      example:
        name: My First Workspace
        description: This is a basic workspace.
    Workspaces.CreateWorkspaceRequest:
      type: object
      properties:
        parent_id:
          allOf:
            - $ref: '#/components/schemas/UUID'
          description: Parent ID of Workspace A
          default: Parent ID of Workspace A
      allOf:
        - $ref: '#/components/schemas/Workspaces.BasicWorkspace'
      example:
        parent_id: c1f729e2-3e2b-4f9e-b247-a4b568393e11
        name: Alpha Workspace
        description: Create a standard workspace.
    Workspaces.CreateWorkspaceResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Workspaces.Workspace'
      example:
        _: 201
        id: e4277742-b91c-43f1-a185-b827e8574345
        parent_id: c1f729e2-3e2b-4f9e-b247-a4b568393e11
        type: standard
        name: Alpha Workspace
        description: Create a standard workspace.
        created: '2024-08-04T12:00:00Z'
        modified: '2024-08-04T12:00:00Z'
    Workspaces.CursorPaginationLinks:
      type: object
      required:
        - next
        - previous
      properties:
        next:
          type: string
          nullable: true
          format: uri
          description: The next link in pagination
          example: /api/rbac/v2/(resource)/?limit=10&cursor=eyJpZCI6IjEyMyJ9
        previous:
          type: string
          nullable: true
          format: uri
          description: The previous link in pagination
          example: /api/rbac/v2/(resource)/?limit=10&cursor=eyJpZCI6IjEwMCJ9
    Workspaces.CursorPaginationMeta:
      type: object
      required:
        - limit
      properties:
        limit:
          type: integer
          format: int64
          description: Limit of returned objects
          example: 10
          default: 10
    Workspaces.MoveWorkspaceRequest:
      type: object
      required:
        - parent_id
      properties:
        parent_id:
          allOf:
            - $ref: '#/components/schemas/UUID'
          description: The UUID of the new parent workspace.
          default: Parent ID of target workspace
      example:
        parent_id: c1f729e2-3e2b-4f9e-b247-a4b568393e11
    Workspaces.MoveWorkspaceResponse:
      type: object
      required:
        - id
        - parent_id
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/UUID'
          default: Workspace ID of moved workspace
        parent_id:
          allOf:
            - $ref: '#/components/schemas/UUID'
          default: New parent ID of moved workspace
      example:
        _: 200
        id: e4277742-b91c-43f1-a185-b827e8574345
        parent_id: f0e1d2c3-b4a5-4678-9a1b-c2d3e4f5a6b7
    Workspaces.Pagination:
      type: object
      required:
        - meta
        - links
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Workspaces.PaginationMeta'
          description: Pagination metadata
        links:
          allOf:
            - $ref: '#/components/schemas/Workspaces.PaginationLinks'
          description: Pagination links
    Workspaces.PaginationLinks:
      type: object
      required:
        - first
        - next
        - previous
        - last
      properties:
        first:
          type: string
          format: uri
          description: The first link in pagination
          example: /api/rbac/v2/(resource)/?limit=10&offset=0
        next:
          type: string
          nullable: true
          format: uri
          description: The next link in pagination
          example: /api/rbac/v2/(resource)/?limit=10&offset=10
        previous:
          type: string
          nullable: true
          format: uri
          description: The previous link in pagination
          example: /api/rbac/v2/(resource)/?limit=10&offset=0
        last:
          type: string
          format: uri
          description: The last link in pagination
          example: /api/rbac/v2/(resource)/?limit=10&offset=20
    Workspaces.PaginationMeta:
      type: object
      required:
        - count
        - limit
        - offset
      properties:
        count:
          type: integer
          format: int64
          description: Total count of objects
          example: 10
        limit:
          type: integer
          format: int64
          description: Limit of returned objects
          example: 10
          default: 10
        offset:
          type: integer
          format: int64
          description: Offset of returned objects
          example: 10
    Workspaces.PatchWorkspaceRequest:
      type: object
      properties:
        name:
          type: string
          description: Workspace A
          default: Workspace A
        description:
          type: string
          description: Description of Workspace A
          default: Description of Workspace A
      example:
        name: Alpha Workspace - closed
        description: Create a standard workspace.
    Workspaces.PatchWorkspaceResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Workspaces.Workspace'
      example:
        _: 200
        id: e4277742-b91c-43f1-a185-b827e8574345
        parent_id: c1f729e2-3e2b-4f9e-b247-a4b568393e11
        type: standard
        name: Alpha Workspace - closed
        description: Create a standard workspace.
        created: '2024-08-04T12:00:00Z'
        modified: '2024-08-04T12:00:00Z'
    Workspaces.ReadWorkspaceResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Workspaces.Workspace'
      example:
        _: 200
        id: e4277742-b91c-43f1-a185-b827e8574345
        parent_id: c1f729e2-3e2b-4f9e-b247-a4b568393e11
        type: standard
        name: Alpha Workspace
        description: Create a standard workspace.
        created: '2024-08-04T12:00:00Z'
        modified: '2024-08-04T12:00:00Z'
    Workspaces.ReadWorkspaceWithAncestryResponse:
      type: object
      required:
        - ancestry
      properties:
        ancestry:
          type: array
          items:
            $ref: '#/components/schemas/Workspaces.WorkspaceAncestor'
      allOf:
        - $ref: '#/components/schemas/Workspaces.ReadWorkspaceResponse'
      example:
        ancestry:
          - id: c1f729e2-3e2b-4f9e-b247-a4b568393e11
            parent_id: a1b2c3d4-e5f6-47a8-b9c0-d1e2f3a4b5c6
            name: Default Workspace
        _: 200
        id: e4277742-b91c-43f1-a185-b827e8574345
        parent_id: c1f729e2-3e2b-4f9e-b247-a4b568393e11
        type: standard
        name: Alpha Workspace
        description: Create a standard workspace.
        created: '2024-08-04T12:00:00Z'
        modified: '2024-08-04T12:00:00Z'
    Workspaces.UpdateWorkspaceRequest:
      type: object
      required:
        - name
        - description
        - parent_id
      properties:
        name:
          type: string
          description: Workspace A
          default: Workspace A
        description:
          type: string
          description: Description of Workspace A
          default: Description of Workspace A
        parent_id:
          allOf:
            - $ref: '#/components/schemas/UUID'
          description: Must match current parent_id value. Not updatable directly on the workspace.
          default: Parent ID of Workspace A
      example:
        parent_id: c1f729e2-3e2b-4f9e-b247-a4b568393e11
        name: Alpha Workspace
        description: Changing description of alpha workspace to something new.
    Workspaces.UpdateWorkspaceResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Workspaces.Workspace'
      example:
        _: 200
        id: e4277742-b91c-43f1-a185-b827e8574345
        parent_id: c1f729e2-3e2b-4f9e-b247-a4b568393e11
        type: standard
        name: Alpha Workspace
        description: Changing description of alpha workspace to something new.
        created: '2024-08-04T12:00:00Z'
        modified: '2024-08-04T12:00:00Z'
    Workspaces.Workspace:
      type: object
      required:
        - id
        - type
        - name
        - created
        - modified
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        parent_id:
          $ref: '#/components/schemas/UUID'
        type:
          $ref: '#/components/schemas/Workspaces.WorkspaceTypes'
        name:
          type: string
          description: Workspace A
          default: Workspace A
        description:
          type: string
          description: Description of Workspace A
          default: Description of Workspace A
        created:
          type: string
          format: date-time
          description: '2019-01-21T17:32:28Z'
        modified:
          type: string
          format: date-time
          description: '2019-01-21T17:32:28Z'
      example:
        id: e4277742-b91c-43f1-a185-b827e8574345
        parent_id: c1f729e2-3e2b-4f9e-b247-a4b568393e11
        type: standard
        name: My first workspace
        description: This is a basic workspace.
        created: '2024-08-04T12:00:00Z'
        modified: '2024-08-04T12:00:00Z'
    Workspaces.WorkspaceAncestor:
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        parent_id:
          $ref: '#/components/schemas/UUID'
        name:
          type: string
    Workspaces.WorkspaceListResponse:
      type: object
      required:
        - meta
        - links
        - data
      properties:
        meta:
          allOf:
            - $ref: '#/components/schemas/Workspaces.PaginationMeta'
          description: Pagination metadata
        links:
          allOf:
            - $ref: '#/components/schemas/Workspaces.PaginationLinks'
          description: Pagination links
        data:
          type: array
          items:
            $ref: '#/components/schemas/Workspaces.Workspace'
          description: List of workspaces
      example:
        meta:
          count: 50
          limit: 10
          offset: 0
        links:
          first: /api/rbac/v2/workspaces?limit=10&offset=0
          next: /api/rbac/v2/workspaces?limit=10&offset=10
          previous: null
          last: /api/rbac/v2/workspaces?limit=10&offset=40
        data:
          - id: e4277742-b91c-43f1-a185-b827e8574345
            parent_id: c1f729e2-3e2b-4f9e-b247-a4b568393e11
            type: standard
            name: My first workspace
            description: This is a basic workspace.
            created: '2024-08-04T12:00:00Z'
            modified: '2024-08-04T12:00:00Z'
    Workspaces.WorkspaceTypes:
      type: string
      enum:
        - root
        - default
        - standard
        - ungrouped-hosts
    Workspaces.WorkspaceTypesQueryParam:
      type: string
      enum:
        - all
        - root
        - default
        - standard
        - ungrouped-hosts
servers:
  - url: https://console.redhat.com/{basePath}
    description: Production Server
    variables:
      basePath:
        default: api/rbac/v2
  - url: https://console.stage.redhat.com/{basePath}
    description: Stage Server
    variables:
      basePath:
        default: api/rbac/v2
  - url: https://localhost:{port}/{basePath}
    description: Development Server
    variables:
      basePath:
        default: api/rbac/v2
      port:
        default: '8000'
