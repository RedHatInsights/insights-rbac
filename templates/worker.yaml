apiVersion: v1
kind: Template
labels:
  app: ${NAME}
  template: ${NAME}-worker
metadata:
  annotations:
    description: Celery worker for Role Based Access Control powered by Django+PostgreSQL+Celery
    iconClass: icon-python
    openshift.io/display-name: RBAC
    openshift.io/documentation-url: https://insight-rbac.readthedocs.io/en/latest/
    openshift.io/long-description: This template defines resources needed to run the
      RBAC application, including a build configuration, application deployment configuration,
      and database deployment configuration.
    openshift.io/provider-display-name: Red Hat, Inc.
    tags: python,flask
  name: rbac-worker
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: ${NAME}
    name: ${NAME}-worker
  spec:
    minReadySeconds: 15
    progressDeadlineSeconds: 600
    replicas: ${{REPLICAS}}
    revisionHistoryLimit: 9
    selector:
      matchLabels:
        name: ${NAME}-worker
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${NAME}-worker
        name: ${NAME}-worker
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: name
                    operator: In
                    values:
                    - ${NAME}-worker
                topologyKey: failure-domain.beta.kubernetes.io/zone
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: name
                    operator: In
                    values:
                    - ${NAME}-worker
                topologyKey: kubernetes.io/hostname
              weight: 99
        containers:
        - command:
          - /bin/bash
          - -c
          - 'PYTHONPATH=${PWD}/rbac/ celery -A rbac.celery worker -l $DJANGO_LOG_LEVEL

            '
          env:
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                key: redis-service-host
                name: redis-config
          - name: REDIS_PORT
            valueFrom:
              configMapKeyRef:
                key: redis-service-port
                name: redis-config
          - name: DJANGO_LOG_LEVEL
            value: ${DJANGO_LOG_LEVEL}
          - name: DJANGO_DEBUG
            value: ${DJANGO_DEBUG}
          - name: PERMISSION_SEEDING_ENABLED
            value: 'False'
          - name: ROLE_SEEDING_ENABLED
            value: 'False'
          - name: GROUP_SEEDING_ENABLED
            value: 'False'
          - name: DATABASE_SERVICE_CERT
            valueFrom:
              secretKeyRef:
                key: rds-cacert
                name: rds-client-ca
                optional: true
          - name: DJANGO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: django-secret-key
                name: ${NAME}-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_PROTOCOL
            valueFrom:
              secretKeyRef:
                key: principal-proxy-protocol
                name: ${NAME}-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_HOST
            valueFrom:
              secretKeyRef:
                key: principal-proxy-host
                name: ${NAME}-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_PORT
            valueFrom:
              secretKeyRef:
                key: principal-proxy-port
                name: ${NAME}-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_PATH
            value: ''
          - name: PRINCIPAL_PROXY_USER_ENV
            valueFrom:
              secretKeyRef:
                key: principal-proxy-env
                name: ${NAME}-secret
                optional: false
          - name: PRINCIPAL_PROXY_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: principal-proxy-client-id
                name: ${NAME}-secret
                optional: false
          - name: PRINCIPAL_PROXY_API_TOKEN
            valueFrom:
              secretKeyRef:
                key: principal-proxy-api-token
                name: ${NAME}-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_SSL_VERIFY
            valueFrom:
              secretKeyRef:
                key: principal-proxy-ssl-verify
                name: ${NAME}-secret
                optional: true
          - name: PRINCIPAL_PROXY_SERVICE_SOURCE_CERT
            valueFrom:
              secretKeyRef:
                key: principal-proxy-source-cert
                name: ${NAME}-secret
                optional: true
          - name: APP_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: DATABASE_HOST
            valueFrom:
              secretKeyRef:
                key: db.host
                name: ${DB_SECRET_NAME}
                optional: false
          - name: DATABASE_PORT
            valueFrom:
              secretKeyRef:
                key: db.port
                name: ${DB_SECRET_NAME}
                optional: false
          - name: DATABASE_NAME
            valueFrom:
              secretKeyRef:
                key: db.name
                name: ${DB_SECRET_NAME}
                optional: false
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: db.user
                name: ${DB_SECRET_NAME}
                optional: false
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db.password
                name: ${DB_SECRET_NAME}
                optional: false
          - name: PGSSLMODE
            value: ${PGSSLMODE}
          - name: PGSSLROOTCERT
            value: /etc/rds-certs/rds-cacert
          - name: ACCESS_CACHE_CONNECT_SIGNALS
            value: ${ACCESS_CACHE_CONNECT_SIGNALS}
          - name: CLOWDER_ENABLED
            value: ${CLOWDER_ENABLED}
          image: quay.io/cloudservices/rbac:${IMAGE_TAG}
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - 'PYTHONPATH=${PWD}/rbac/ celery inspect ping -A rbac.celery

                '
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 300
            successThreshold: 1
            timeoutSeconds: 10
          name: ${NAME}-worker
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - 'PYTHONPATH=${PWD}/rbac/ celery inspect ping -A rbac.celery

                '
            failureThreshold: 3
            periodSeconds: 300
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: ${CELERY_WORKER_CPU_LIMIT}
              memory: ${CELERY_WORKER_MEMORY_LIMIT}
            requests:
              cpu: ${CELERY_WORKER_CPU_REQUEST}
              memory: ${CELERY_WORKER_MEMORY_REQUEST}
          volumeMounts:
          - mountPath: /etc/rds-certs
            name: rds-client-ca
            readOnly: true
          - mountPath: /opt/rbac/rbac/management/role/definitions
            name: default-role-config
          - mountPath: /opt/rbac/rbac/management/role/permissions
            name: model-access-permissions
        imagePullSecrets:
        - name: quay-cloudservices-pull
        - name: rh-registry-pull
        volumes:
        - name: rds-client-ca
          secret:
            secretName: rds-client-ca
        - configMap:
            name: ${CONFIG_MAP_NAME}
          name: default-role-config
        - configMap:
            name: ${MODEL_ACCESS_PERMISSIONS}
          name: model-access-permissions
parameters:
- description: The name assigned to all frontend objects defined in this template.
  displayName: Name
  name: NAME
  required: true
  value: rbac
- description: Initial amount of CPU the worker container will request.
  displayName: Celery worker CPU Resource Request
  name: CELERY_WORKER_CPU_REQUEST
  required: true
  value: 100m
- description: Maximum amount of CPU the worker container can use.
  displayName: CPU Limit
  name: CELERY_WORKER_CPU_LIMIT
  required: true
  value: 300m
- description: Initial amount of memory the worker container will request.
  displayName: Celery worker Memory Resource Request
  name: CELERY_WORKER_MEMORY_REQUEST
  required: true
  value: 256Mi
- description: Maximum amount of memory the worker container can use.
  displayName: Memory Limit
  name: CELERY_WORKER_MEMORY_LIMIT
  required: true
  value: 512Mi
- displayName: Django Debug
  name: DJANGO_DEBUG
  value: 'false'
- displayName: Django log level
  name: DJANGO_LOG_LEVEL
  value: INFO
- description: 'Options can be found in the doc: https://www.postgresql.org/docs/current/libpq-ssl.html#LIBPQ-SSL-SSLMODE-STATEMENTS'
  displayName: Postgres SSL mode
  name: PGSSLMODE
  value: prefer
- description: The number of replicas to use for the prometheus deployment
  name: REPLICAS
  value: '1'
- description: Name of the rbac-config config map
  name: CONFIG_MAP_NAME
  value: rbac-config
- description: Name of the predefined access permissions config map
  name: MODEL_ACCESS_PERMISSIONS
  value: model-access-permissions
- description: Boolean for controlling access cache invalidation signals
  name: ACCESS_CACHE_CONNECT_SIGNALS
  value: 'False'
- description: Determines Clowder deployment
  name: CLOWDER_ENABLED
  value: 'false'
- description: Image tag
  name: IMAGE_TAG
  required: true
- description: Name of DB secret
  name: DB_SECRET_NAME
  value: rbac-db
