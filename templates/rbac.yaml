apiVersion: v1
kind: Template
labels:
  app: rbac
  template: rbac
metadata:
  annotations:
    description: Role Based Access Control powered by Django+PostgreSQL
    iconClass: icon-python
    openshift.io/display-name: RBAC
    openshift.io/documentation-url: https://insight-rbac.readthedocs.io/en/latest/
    openshift.io/long-description: This template defines resources needed to run the
      RBAC application
    openshift.io/provider-display-name: Red Hat, Inc.
    tags: quickstart,python,django,postgresql
  name: rbac
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
      prometheus.io/path: /metrics
      prometheus.io/port: '8080'
      prometheus.io/scrape: 'true'
      service.alpha.openshift.io/dependencies: '[{"name": "${SERVICE_DEPENDENCY_NAME}",
        "kind": "Service"}]'
    name: rbac
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: rbac
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels: {}
    name: rbac
  spec:
    minReadySeconds: 15
    progressDeadlineSeconds: 600
    replicas: ${{MIN_REPLICAS}}
    revisionHistoryLimit: 9
    selector:
      matchLabels:
        name: rbac
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        labels:
          name: rbac
        name: rbac
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: name
                    operator: In
                    values:
                    - rbac
                topologyKey: failure-domain.beta.kubernetes.io/zone
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: name
                    operator: In
                    values:
                    - rbac
                topologyKey: kubernetes.io/hostname
              weight: 99
        containers:
        - env:
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                key: redis-service-host
                name: redis-config
          - name: REDIS_PORT
            valueFrom:
              configMapKeyRef:
                key: redis-service-port
                name: redis-config
          - name: SERVICE_PSKS
            valueFrom:
              secretKeyRef:
                key: psks.json
                name: ${RBAC_PSKS}
                optional: false
          - name: DATABASE_HOST
            valueFrom:
              secretKeyRef:
                key: db.host
                name: ${DB_SECRET_NAME}
                optional: false
          - name: DATABASE_PORT
            valueFrom:
              secretKeyRef:
                key: db.port
                name: ${DB_SECRET_NAME}
          - name: DATABASE_NAME
            valueFrom:
              secretKeyRef:
                key: db.name
                name: ${DB_SECRET_NAME}
                optional: false
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: db.user
                name: ${DB_SECRET_NAME}
                optional: false
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db.password
                name: ${DB_SECRET_NAME}
                optional: false
          - name: PGSSLMODE
            value: ${PGSSLMODE}
          - name: PGSSLROOTCERT
            value: /etc/rds-certs/rds-cacert
          - name: DJANGO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: django-secret-key
                name: rbac-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_PROTOCOL
            valueFrom:
              secretKeyRef:
                key: principal-proxy-protocol
                name: rbac-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_HOST
            valueFrom:
              secretKeyRef:
                key: principal-proxy-host
                name: rbac-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_PORT
            valueFrom:
              secretKeyRef:
                key: principal-proxy-port
                name: rbac-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_PATH
            value: ''
          - name: PRINCIPAL_PROXY_USER_ENV
            valueFrom:
              secretKeyRef:
                key: principal-proxy-env
                name: rbac-secret
                optional: false
          - name: PRINCIPAL_PROXY_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: principal-proxy-client-id
                name: rbac-secret
                optional: false
          - name: PRINCIPAL_PROXY_API_TOKEN
            valueFrom:
              secretKeyRef:
                key: principal-proxy-api-token
                name: rbac-secret
                optional: false
          - name: PRINCIPAL_PROXY_SERVICE_SSL_VERIFY
            valueFrom:
              secretKeyRef:
                key: principal-proxy-ssl-verify
                name: rbac-secret
                optional: true
          - name: PRINCIPAL_PROXY_SERVICE_SOURCE_CERT
            valueFrom:
              secretKeyRef:
                key: principal-proxy-source-cert
                name: rbac-secret
                optional: true
          - name: POD_CPU_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: rbac
                resource: limits.cpu
          - name: ACCESS_CACHE_ENABLED
            value: ${ACCESS_CACHE_ENABLED}
          - name: APP_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: DJANGO_DEBUG
            value: ${DJANGO_DEBUG}
          - name: API_PATH_PREFIX
            value: ${API_PATH_PREFIX}
          - name: DEVELOPMENT
            value: ${DEVELOPMENT}
          - name: RBAC_LOG_LEVEL
            value: ${RBAC_LOG_LEVEL}
          - name: DJANGO_LOG_LEVEL
            value: ${DJANGO_LOG_LEVEL}
          - name: DJANGO_LOG_FORMATTER
            value: ${DJANGO_LOG_FORMATTER}
          - name: DJANGO_LOG_HANDLERS
            value: ${DJANGO_LOG_HANDLERS}
          - name: DJANGO_LOG_DIRECTORY
            value: ${DJANGO_LOG_DIRECTORY}
          - name: DJANGO_LOGGING_FILE
            value: ${DJANGO_LOGGING_FILE}
          - name: PERMISSION_SEEDING_ENABLED
            value: ${PERMISSION_SEEDING_ENABLED}
          - name: ROLE_SEEDING_ENABLED
            value: ${ROLE_SEEDING_ENABLED}
          - name: GROUP_SEEDING_ENABLED
            value: ${GROUP_SEEDING_ENABLED}
          - name: DISABLE_MIGRATE
            value: ${DISABLE_MIGRATE}
          - name: BYPASS_BOP_VERIFICATION
            value: ${BYPASS_BOP_VERIFICATION}
          - name: ROLE_CREATE_ALLOW_LIST
            value: ${ROLE_CREATE_ALLOW_LIST}
          - name: RBAC_DESTRUCTIVE_ENABLED_UNTIL
            value: ${RBAC_DESTRUCTIVE_ENABLED_UNTIL}
          - name: TESTING_APPLICATION
            value: ${TESTING_APPLICATION}
          - name: CLOWDER_ENABLED
            value: ${CLOWDER_ENABLED}
          - name: APP_CONFIG
            value: /opt/rbac/rbac/gunicorn.py
          - name: APP_HOME
            value: /opt/rbac/rbac
          - name: APP_MODULE
            value: rbac.asgi
          image: quay.io/cloudservices/rbac:${IMAGE_TAG}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: ${API_PATH_PREFIX}/v1/status/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: rbac
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: ${API_PATH_PREFIX}/v1/status/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 40
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
          volumeMounts:
          - mountPath: /opt/rbac/rbac/management/role/definitions
            name: default-role-config
          - mountPath: /opt/rbac/rbac/management/role/permissions
            name: model-access-permissions
          - mountPath: /etc/rds-certs
            name: rds-client-ca
            readOnly: true
        imagePullSecrets:
        - name: quay-cloudservices-pull
        - name: rh-registry-pull
        volumes:
        - configMap:
            name: ${CONFIG_MAP_NAME}
          name: default-role-config
        - configMap:
            name: ${MODEL_ACCESS_PERMISSIONS}
          name: model-access-permissions
        - name: rds-client-ca
          secret:
            secretName: rds-client-ca
- apiVersion: autoscaling/v1
  kind: HorizontalPodAutoscaler
  metadata:
    name: rbac
  spec:
    maxReplicas: ${{MAX_REPLICAS}}
    minReplicas: ${{MIN_REPLICAS}}
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: rbac
    targetCPUUtilizationPercentage: ${{TARGET_CPU_UTILIZATION}}
parameters:
- description: Initial amount of memory the Django container will request.
  displayName: Memory Request
  name: MEMORY_REQUEST
  required: true
  value: 1Gi
- description: Maximum amount of memory the Django container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 1Gi
- description: Initial amount of cpu the Django container will request.
  displayName: CPU Request
  name: CPU_REQUEST
  required: true
  value: 250m
- description: Maximum amount of cpu the Django container can use.
  displayName: CPU Limit
  name: CPU_LIMIT
  required: true
  value: 700m
- displayName: Django debug flag
  name: DJANGO_DEBUG
  value: 'False'
- displayName: RBAC PSKs
  name: RBAC_PSKS
  value: rbac-psks
- displayName: Service Dependency Name
  name: SERVICE_DEPENDENCY_NAME
  value: rbac-pgsql
- displayName: API Prefix Path
  name: API_PATH_PREFIX
  value: /api/rbac
- displayName: Development
  name: DEVELOPMENT
  value: 'false'
- displayName: Rbac log level
  name: RBAC_LOG_LEVEL
  value: INFO
- displayName: Django log level
  name: DJANGO_LOG_LEVEL
  value: INFO
- displayName: Django log formatter
  name: DJANGO_LOG_FORMATTER
  value: simple
- displayName: Django log handlers
  name: DJANGO_LOG_HANDLERS
  value: console
- displayName: Django log directory
  name: DJANGO_LOG_DIRECTORY
  required: false
- displayName: Django logging file
  name: DJANGO_LOGGING_FILE
  required: false
- description: Name of the rbac-config config map
  name: CONFIG_MAP_NAME
  value: rbac-config
- description: Name of the predefined access permissions config map
  name: MODEL_ACCESS_PERMISSIONS
  value: model-access-permissions
- description: minimum number of pods to use when autoscaling is enabled
  name: MIN_REPLICAS
  value: '1'
- description: maximum number of pods to use when autoscaling is enabled
  name: MAX_REPLICAS
  value: '1'
- description: target CPU utilization for the service
  name: TARGET_CPU_UTILIZATION
  value: '90'
- description: 'Options can be found in the doc: https://www.postgresql.org/docs/current/libpq-ssl.html#LIBPQ-SSL-SSLMODE-STATEMENTS'
  displayName: Postgres SSL mode
  name: PGSSLMODE
  value: prefer
- description: Python boolean value to enable/disable permission seeding on app boot
  name: PERMISSION_SEEDING_ENABLED
  value: 'True'
- description: Python boolean value to enable/disable role seeding on app boot
  name: ROLE_SEEDING_ENABLED
  value: 'True'
- description: Python boolean value to enable/disable group seeding on app boot
  name: GROUP_SEEDING_ENABLED
  value: 'True'
- description: Flag to disable migrations
  name: DISABLE_MIGRATE
  value: 'True'
- description: Enable the RBAC access cache
  name: ACCESS_CACHE_ENABLED
  value: 'True'
- description: Bypass interaction with the BOP service
  name: BYPASS_BOP_VERIFICATION
  value: 'False'
- description: Application allow list for role creation in RBAC
  name: ROLE_CREATE_ALLOW_LIST
  value: cost-management,remediations,inventory,drift,policies,advisor,catalog,approval,vulnerability,compliance,automation-analytics,notifications
- description: Timestamp expiration allowance on destructive actions through the internal
    RBAC API
  name: RBAC_DESTRUCTIVE_ENABLED_UNTIL
  value: ''
- description: Application name for testing purposes for creating roles
  name: TESTING_APPLICATION
  value: ''
- description: Determines Clowder deployment
  name: CLOWDER_ENABLED
  value: 'false'
- description: Image tag
  name: IMAGE_TAG
  required: true
- description: Name of DB secret
  name: DB_SECRET_NAME
  value: rbac-db
