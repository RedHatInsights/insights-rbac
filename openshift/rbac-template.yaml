apiVersion: v1
kind: Template
metadata:
  name: rbac-template
  annotations:
    openshift.io/display-name: "RBAC"
    description: "Role Based Access Control powered by Django+PostgreSQL"
    tags: "quickstart,python,django,postgresql"
    iconClass: "icon-python"
    openshift.io/long-description: "This template defines resources needed to run the RBAC application, including a build configuration, application deployment configuration, and database deployment configuration."
    openshift.io/provider-display-name: "Red Hat, Inc."
    openshift.io/documentation-url: "https://insight-rbac.readthedocs.io/en/latest/"
labels:
  app: rbac
  template: rbac-template
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: python-36-centos7
    namespace: ${NAMESPACE}
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: centos/python-36-centos7
      name: latest
      referencePolicy:
        type: Source
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: postgresql
    namespace: ${NAMESPACE}
  spec:
    tags:
    - from:
        kind: DockerImage
        name: centos/postgresql-96-centos7
        resourceVersion: latest
      name: "9.6"
      referencePolicy:
        type: Source
- apiVersion: v1
  kind: Secret
  metadata:
    labels:
      app: rbac
      template: rbac-template
    annotations:
      template.openshift.io/expose-database_name: "{.data['database-name']}"
      template.openshift.io/expose-password: "{.data['database-password']}"
      template.openshift.io/expose-username: "{.data['database-user']}"
    name: ${DATABASE_SERVICE_NAME}
  stringData:
    database-name: ${DATABASE_NAME}
    database-password: ${DATABASE_PASSWORD}
    database-user: ${DATABASE_USER}
    database-admin-password: ${DATABASE_ADMIN_PASSWORD}
- apiVersion: v1
  kind: Secret
  metadata:
    labels:
      app: rbac
      template: rbac-template
    annotations:
      template.openshift.io/expose-django_secret_key: "{.data['django-secret-key']}"
      template.openshift.io/expose-principal_proxy_protocol: "{.data['principal-proxy-protocol']}"
      template.openshift.io/expose-principal_proxy_host: "{.data['principal-proxy-host']}"
      template.openshift.io/expose-principal_proxy_port: "{.data['principal-proxy-port']}"
      template.openshift.io/expose-principal_proxy_path: "{.data['principal-proxy-path']}"
      template.openshift.io/expose-principal_proxy_env: "{.data['principal-proxy-env']}"
      template.openshift.io/expose-principal_proxy_client_id: "{.data['principal-proxy-client-id']}"
      template.openshift.io/expose-principal_proxy_api_token: "{.data['principal-proxy-api-token']}"
    name: ${NAME}-secret
  stringData:
    django-secret-key: ${DJANGO_SECRET_KEY}
    principal-proxy-protocol: ${PRINCIPAL_PROXY_SERVICE_PROTOCOL}
    principal-proxy-host: ${PRINCIPAL_PROXY_SERVICE_HOST}
    principal-proxy-port: ${PRINCIPAL_PROXY_SERVICE_PORT}
    principal-proxy-path: ${PRINCIPAL_PROXY_SERVICE_PATH}
    principal-proxy-env: ${PRINCIPAL_PROXY_USER_ENV}
    principal-proxy-client-id: ${PRINCIPAL_PROXY_CLIENT_ID}
    principal-proxy-api-token: ${PRINCIPAL_PROXY_API_TOKEN}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: rbac-env
    labels:
      name: ${NAME}
  data:
    database-engine: ${DATABASE_ENGINE}
    database-name: ${DATABASE_NAME}
    database-service-name: POSTGRES_SQL
    postgres-sql-service-host: ${NAME}-pgsql.${NAMESPACE}.svc
    postgres-sql-service-port: "5432"
    app-config: ${APP_CONFIG}
    app-home: ${APP_HOME}
    app-module: ${APP_MODULE}
    app-namespace: ${NAMESPACE}
    app-domain: ${APP_DOMAIN}
    django-debug: ${DJANGO_DEBUG}
    api-path-prefix: ${API_PATH_PREFIX}
    development: "False"
    rbac-log-level: "INFO"
    django-log-level: "INFO"
    django-log-formatter: "simple"
    django-log-handlers: "console"
    django-log-directory: ""
    django-logging-file: ""
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
      service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}", "kind": "Service"}]'
      prometheus.io/scrape: 'true'
      prometheus.io/path: /metrics
      prometheus.io/port: '8080'
    name: ${NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: ${NAME}
- apiVersion: v1
  kind: Route
  metadata:
    name: ${NAME}
  spec:
    host: ${APPLICATION_DOMAIN}
    to:
      kind: Service
      name: ${NAME}
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${NAME}
    annotations:
      description: "Keeps track of changes in the application image"
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      description: Defines how to build the application
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:latest
    resources:
      requests:
        memory: ${BUILD_MEMORY_REQUEST}
      limits:
        memory: ${BUILD_MEMORY_LIMIT}
    source:
      contextDir: ${CONTEXT_DIR}
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    strategy:
      dockerStrategy:
        env:
          - name: PIP_INDEX_URL
            value: ${PIP_INDEX_URL}
          - name: PIPENV_PYPI_MIRROR
            value: ${PIPENV_PYPI_MIRROR}
          - name: ENABLE_PIPENV
            value: "true"
          - name: APP_CONFIG
            valueFrom:
              configMapKeyRef:
                name: rbac-env
                key: app-config
                optional: false
          - name: APP_HOME
            valueFrom:
              configMapKeyRef:
                name: rbac-env
                key: app-home
          - name: APP_MODULE
            valueFrom:
              configMapKeyRef:
                name: rbac-env
                key: app-module
          - name: APP_NAMESPACE
            valueFrom:
              configMapKeyRef:
                name: rbac-env
                key: app-namespace
        from:
          kind: ImageStreamTag
          name: python-36-centos7:latest
          namespace: ${NAMESPACE}
      type: Source
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      name: ${NAME}
    resources:
      requests:
        memory: ${MEMORY_REQUEST}
      limits:
        memory: ${MEMORY_LIMIT}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${NAME}
        name: ${NAME}
      spec:
        containers:
        - name: ${NAME}
          image: ${NAME}
          env:
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: ${DATABASE_SERVICE_NAME}
                  optional: false
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: ${DATABASE_SERVICE_NAME}
                  optional: false
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: django-secret-key
                  name: ${NAME}-secret
                  optional: false
            - name: PRINCIPAL_PROXY_SERVICE_PROTOCOL
              valueFrom:
                secretKeyRef:
                  key: principal-proxy-protocol
                  name: ${NAME}-secret
                  optional: false
            - name: PRINCIPAL_PROXY_SERVICE_HOST
              valueFrom:
                secretKeyRef:
                  key: principal-proxy-host
                  name: ${NAME}-secret
                  optional: false
            - name: PRINCIPAL_PROXY_SERVICE_PORT
              valueFrom:
                secretKeyRef:
                  key: principal-proxy-port
                  name: ${NAME}-secret
                  optional: false
            - name: PRINCIPAL_PROXY_SERVICE_PATH
              valueFrom:
                secretKeyRef:
                  key: principal-proxy-path
                  name: ${NAME}-secret
                  optional: false
            - name: PRINCIPAL_PROXY_USER_ENV
              valueFrom:
                secretKeyRef:
                  key: principal-proxy-env
                  name: ${NAME}-secret
                  optional: false
            - name: PRINCIPAL_PROXY_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  key: principal-proxy-client-id
                  name: ${NAME}-secret
                  optional: false
            - name: PRINCIPAL_PROXY_API_TOKEN
              valueFrom:
                secretKeyRef:
                  key: principal-proxy-api-token
                  name: ${NAME}-secret
                  optional: false
            - name: DATABASE_ENGINE
              valueFrom:
                configMapKeyRef:
                  name: rbac-env
                  key: database-engine
                  optional: false
            - name: DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  name: rbac-env
                  key: database-name
                  optional: false
            - name: DATABASE_SERVICE_NAME
              valueFrom:
                configMapKeyRef:
                  name: rbac-env
                  key: database-service-name
                  optional: false
            - name: POSTGRES_SQL_SERVICE_HOST
              valueFrom:
                configMapKeyRef:
                  name: rbac-env
                  key: postgres-sql-service-host
                  optional: false
            - name: POSTGRES_SQL_SERVICE_PORT
              valueFrom:
                configMapKeyRef:
                  name: rbac-env
                  key: postgres-sql-service-port
                  optional: false
            - name: DJANGO_DEBUG
              valueFrom:
                configMapKeyRef:
                  name: rbac-env
                  key: django-debug
                  optional: false
            - name: API_PATH_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: rbac-env
                  key: api-path-prefix
                  optional: false
            - name: APP_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  name: rbac-env
                  key: app-namespace
                  optional: true
            - name: DEVELOPMENT
              valueFrom:
                configMapKeyRef:
                  name: rbac-env
                  key: development
                  optional: true
            - name: RBAC_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: rbac-env
                  key: rbac-log-level
                  optional: true
            - name: DJANGO_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: rbac-env
                  key: django-log-level
                  optional: true
            - name: DJANGO_LOG_FORMATTER
              valueFrom:
                configMapKeyRef:
                  name: rbac-env
                  key: django-log-formatter
                  optional: true
            - name: DJANGO_LOG_HANDLERS
              valueFrom:
                configMapKeyRef:
                  name: rbac-env
                  key: django-log-handlers
                  optional: true
            - name: DJANGO_LOG_DIRECTORY
              valueFrom:
                configMapKeyRef:
                  name: rbac-env
                  key: django-log-directory
                  optional: true
            - name: DJANGO_LOGGING_FILE
              valueFrom:
                configMapKeyRef:
                  name: rbac-env
                  key: django-logging-file
                  optional: true
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: ${API_PATH_PREFIX}/v1/status/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          ports:
            - containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: ${API_PATH_PREFIX}/v1/status/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 3
          resources:
            requests:
              memory: ${MEMORY_REQUEST}
            limits:
              memory: ${MEMORY_LIMIT}
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - ${NAME}
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the database
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: rbac
      template: rbac-template
    name: rbac-pgsql
  spec:
    replicas: 1
    selector:
      name: rbac-pgsql
    resources:
      limits:
        memory: ${MEMORY_REQUEST}
      limits:
        memory: ${MEMORY_LIMIT}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: rbac
          name: rbac-pgsql
          template: rbac-template
        name: rbac-pgsql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${DATABASE_SERVICE_NAME}
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${DATABASE_SERVICE_NAME}
          - name: POSTGRESQL_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-admin-password
                name: ${DATABASE_SERVICE_NAME}
          - name: POSTGRESQL_DATABASE
            value: ${DATABASE_NAME}
          image: postgresql:9.6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: rbac-pgsql
          ports:
          - containerPort: "5432"
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: ${POSTGRESQL_MEMORY_REQUEST}
            limits:
              memory: ${POSTGRESQL_MEMORY_LIMIT}
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: rbac-pgsql-data
        volumes:
        - name: rbac-pgsql-data
          persistentVolumeClaim:
            claimName: rbac-pgsql
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - rbac-pgsql
        from:
          kind: ImageStreamTag
          name: postgresql:9.6
          namespace: ${NAMESPACE}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: rbac
      template: rbac-template
    name: ${DATABASE_SERVICE_NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes the database server
    labels:
      app: rbac
      template: rbac-template
    name: rbac-pgsql
  spec:
    ports:
    - name: rbac-pgsql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: ${DATABASE_SERVICE_NAME}
parameters:
- description: The name assigned to all frontend objects defined in this template.
  displayName: Name
  name: NAME
  required: true
  value: rbac
- description: The OpenShift Namespace where the ImageStream resides.
  displayName: Namespace
  name: NAMESPACE
  required: true
  value: project-rbac
- description: The name for the masu service
  displayName: Masu
  name: MASU
  required: true
  value: masu
- description: Initial amount of memory the build container will request.
  displayName: Build Memory Request
  name: BUILD_MEMORY_REQUEST
  required: true
  value: 1Gi
- description: Maximum amount of memory the build container can use.
  displayName: Build Memory Limit
  name: BUILD_MEMORY_LIMIT
  required: true
  value: 1Gi
- description: Initial amount of memory the Django container will request.
  displayName: Memory Request
  name: MEMORY_REQUEST
  required: true
  value: 1Gi
- description: Maximum amount of memory the Django container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 1Gi
- description: Initial amount of memory the PostgreSQL container will request.
  displayName: Memory Request (PostgreSQL)
  name: POSTGRESQL_MEMORY_REQUEST
  required: true
  value: 512Mi
- description: Maximum amount of memory the PostgreSQL container can use.
  displayName: Memory Limit (PostgreSQL)
  name: POSTGRESQL_MEMORY_LIMIT
  required: true
  value: 512Mi
- description: Volume space available for data, e.g. 512Mi, 2Gi
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 1Gi
- description: The URL of the repository with your application source code.
  displayName: Git Repository URL
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/RedHatInsights/insights-rbac.git
- description: Set this to a branch name, tag or other ref of your repository if you
    are not using the default branch.
  displayName: Git Reference
  name: SOURCE_REPOSITORY_REF
- description: Set this to the relative path to your project if it is not in the root
    of your repository.
  displayName: Context Directory
  name: CONTEXT_DIR
- description: The exposed hostname that will route to the Django service, if left
    blank a value will be defaulted.
  displayName: Application Hostname
  name: APPLICATION_DOMAIN
- description: Github trigger secret.  A difficult to guess string encoded as part
    of the webhook URL.  Not encrypted.
  displayName: GitHub Webhook Secret
  from: '[a-zA-Z0-9]{40}'
  generate: expression
  name: GITHUB_WEBHOOK_SECRET
- displayName: Database Service Name
  name: DATABASE_SERVICE_NAME
  required: true
  value: rbac-pgsql
- description: 'Database engine: postgresql, mysql or sqlite (default).'
  displayName: Database Engine
  name: DATABASE_ENGINE
  required: true
  value: postgresql
- displayName: Database Name
  name: DATABASE_NAME
  required: true
  value: rbac
- displayName: Database Username
  from: 'user_[a-zA-Z0-9]{12}'
  generate: expression
  name: DATABASE_USER
  required: true
- displayName: Database User Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: DATABASE_PASSWORD
- displayName: Database Admin Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: DATABASE_ADMIN_PASSWORD
- description: Absolute path to Gunicorn configuration file (optional).
  displayName: Application Configuration File Path
  name: APP_CONFIG
  value: /opt/app-root/src/rbac/gunicorn.py
- description: Absolute path to application install location (optional).
  displayName: Application Home Directory
  name: APP_HOME
  value: /opt/app-root/src/rbac
- description: Python module name of the application (optional).
  displayName: Application Module Name
  name: APP_MODULE
  value: rbac.wsgi
- description: Set this to a long random string.
  displayName: Django Secret Key
  from: '[a-zA-Z0-9]{50}'
  generate: expression
  name: DJANGO_SECRET_KEY
- description: The custom PyPi index URL
  displayName: Custom PyPi Index URL
  name: PIP_INDEX_URL
- description: The custom PipEnv PyPi index URL
  displayName: Custom PipEnv PyPi Index URL
  name: PIPENV_PYPI_MIRROR
- displayName: Upgrade pip
  description: Whether to upgrade pip to latest
  name: UPGRADE_PIP_TO_LATEST
  value: ''
- displayName: Django debug flag
  value: 'False'
  name: DJANGO_DEBUG
- displayName: API path prefix
  value: 'api'
  name: API_PATH_PREFIX
- displayName: Protocol for principal proxy interaction
  value: 'https'
  name: PRINCIPAL_PROXY_SERVICE_PROTOCOL
- displayName: Host for principal proxy interaction
  value: 'localhost'
  name: PRINCIPAL_PROXY_SERVICE_HOST
- displayName: Port for principal proxy interaction
  value: '443'
  name: PRINCIPAL_PROXY_SERVICE_PORT
- displayName: Path for principal proxy interaction
  value: '/r/insights-services'
  name: PRINCIPAL_PROXY_SERVICE_PATH
- displayName: User environment for principal proxy interaction
  value: 'env'
  name: PRINCIPAL_PROXY_USER_ENV
- displayName: Client ID for principal proxy interaction
  value: 'client_id'
  name: PRINCIPAL_PROXY_CLIENT_ID
- displayName: Token for principal proxy interaction
  value: 'token'
  name: PRINCIPAL_PROXY_API_TOKEN