# Generated by Django 4.2.23 on 2025-07-18 18:29

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import management.rbac_fields
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0015_tenant_api_tenant_ready_c03ae0_idx"),
        ("management", "0068_alter_workspace_type"),
    ]

    operations = [
        migrations.CreateModel(
            name="RoleV2",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=150)),
                ("display_name", models.CharField(default="", max_length=150)),
                ("description", models.TextField(null=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("custom", "Custom"),
                            ("seeded", "Seeded"),
                            ("platform-all-users", "Platform All Users"),
                            ("platform-all-admins", "Platform All Admins"),
                        ],
                        db_index=True,
                        default="custom",
                        max_length=20,
                    ),
                ),
                ("version", models.PositiveIntegerField(default=1)),
                ("created", models.DateTimeField(default=django.utils.timezone.now)),
                ("modified", management.rbac_fields.AutoDateTimeField(default=django.utils.timezone.now)),
                ("children", models.ManyToManyField(related_name="parents", to="management.rolev2")),
                ("permissions", models.ManyToManyField(related_name="roles_v2", to="management.permission")),
                ("tenant", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.tenant")),
                (
                    "v1_source",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="v2_roles",
                        to="management.role",
                    ),
                ),
            ],
            options={
                "ordering": ["name", "modified"],
            },
        ),
        migrations.CreateModel(
            name="RoleBinding",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("resource_type_namespace", models.CharField(max_length=256)),
                ("resource_type_name", models.CharField(max_length=256)),
                ("resource_id", models.CharField(max_length=256)),
                ("groups", models.ManyToManyField(to="management.group")),
                ("principals", models.ManyToManyField(to="management.principal")),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="bindings", to="management.rolev2"
                    ),
                ),
                ("tenant", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="api.tenant")),
            ],
        ),
        migrations.AddConstraint(
            model_name="rolev2",
            constraint=models.UniqueConstraint(fields=("name", "tenant"), name="unique role v2 name per tenant"),
        ),
        migrations.AddConstraint(
            model_name="rolev2",
            constraint=models.UniqueConstraint(
                fields=("display_name", "tenant"), name="unique role v2 display name per tenant"
            ),
        ),
        migrations.AddConstraint(
            model_name="rolebinding",
            constraint=models.UniqueConstraint(
                fields=("role", "resource_type_namespace", "resource_type_name", "resource_id"),
                name="unique role binding per role resource pair",
            ),
        ),
    ]
