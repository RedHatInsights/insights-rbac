from uuid import uuid4

from django.db import models
from django.utils import timezone
from management.models import Permission, Role
from management.rbac_fields import AutoDateTimeField
from rest_framework import serializers

from api.models import TenantAwareModel

class RoleV2(TenantAwareModel):
    class Types(models.TextChoices):
        CUSTOM = "custom"
        SEEDED = "seeded"
        PLATFORM = "platform"

    uuid = models.UUIDField(default=uuid4, editable=False, unique=True, null=False)
    name = models.CharField(max_length=150, null=False, blank=False)
    display_name = models.CharField(max_length=150, default="")
    description = models.TextField(null=True)
    type = models.CharField(
        choices=Types.choices, max_length=20, null=False, blank=False, db_index=True, default=Types.CUSTOM
    )
    permissions = models.ManyToManyField(Permission, related_name="v2_roles")
    children = models.ManyToManyField("self", related_name="parents", symmetrical=False)

class RoleBinding(TenantAwareModel):
    """A role binding."""

    uuid = models.UUIDField(default=uuid4, editable=False, unique=True, null=False)
    role = models.ForeignKey(RoleV2, on_delete=models.CASCADE, related_name="bindings")

    resource_type = models.CharField(max_length=256, default=None, null=False)
    resource_id = models.CharField(max_length=256, default=None, null=False)

    class Meta:
        constraints = [
            models.UniqueConstraint(
                fields=["role", "resource_type", "resource_id"],
                name="unique role binding per role resource pair",
            ),
        ]
