# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import relationships_pb2 as relationships__pb2


class RelationshipsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateRelationships = channel.unary_unary(
                '/api.rebac.v1.Relationships/CreateRelationships',
                request_serializer=relationships__pb2.CreateRelationshipsRequest.SerializeToString,
                response_deserializer=relationships__pb2.CreateRelationshipsResponse.FromString,
                )
        self.ReadRelationships = channel.unary_unary(
                '/api.rebac.v1.Relationships/ReadRelationships',
                request_serializer=relationships__pb2.ReadRelationshipsRequest.SerializeToString,
                response_deserializer=relationships__pb2.ReadRelationshipsResponse.FromString,
                )
        self.DeleteRelationships = channel.unary_unary(
                '/api.rebac.v1.Relationships/DeleteRelationships',
                request_serializer=relationships__pb2.DeleteRelationshipsRequest.SerializeToString,
                response_deserializer=relationships__pb2.DeleteRelationshipsResponse.FromString,
                )


class RelationshipsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateRelationships(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadRelationships(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRelationships(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RelationshipsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateRelationships': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRelationships,
                    request_deserializer=relationships__pb2.CreateRelationshipsRequest.FromString,
                    response_serializer=relationships__pb2.CreateRelationshipsResponse.SerializeToString,
            ),
            'ReadRelationships': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadRelationships,
                    request_deserializer=relationships__pb2.ReadRelationshipsRequest.FromString,
                    response_serializer=relationships__pb2.ReadRelationshipsResponse.SerializeToString,
            ),
            'DeleteRelationships': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRelationships,
                    request_deserializer=relationships__pb2.DeleteRelationshipsRequest.FromString,
                    response_serializer=relationships__pb2.DeleteRelationshipsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.rebac.v1.Relationships', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Relationships(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateRelationships(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.rebac.v1.Relationships/CreateRelationships',
            relationships__pb2.CreateRelationshipsRequest.SerializeToString,
            relationships__pb2.CreateRelationshipsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadRelationships(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.rebac.v1.Relationships/ReadRelationships',
            relationships__pb2.ReadRelationshipsRequest.SerializeToString,
            relationships__pb2.ReadRelationshipsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRelationships(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.rebac.v1.Relationships/DeleteRelationships',
            relationships__pb2.DeleteRelationshipsRequest.SerializeToString,
            relationships__pb2.DeleteRelationshipsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
